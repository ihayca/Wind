// @endpoint https://resverianaliz.aydemyenilenebilir.com.tr:8889/api/v0/exec
// @theme dark-blue
{

  'title' 'Stoppages'
  'cellHeight' 100   
  'options' { 
    'showErrors' true 
     'eventHandler' 'type=popup,tag=popup'
      'scheme' 'CHARTANA'
          //  'timeZone' 'Europe/Istanbul'   

          //  'timeZone' '+03:00' 
             'showLoader' true 
      
         }
		 
  'vars' {
      'plant' 'Usak-SN'
      'TurbineId' [ '1' '2' ]
      'status_event' '1 | 2022-07-01T00:00:00 | 10m0s | Dummy' // 'Turbine-1 | 2022-07-01T00:00:00 | 10m0s'
      'duration' 600000000
      'status_origin' 'Manufacturer'
      'comp_code' 'Environmental'
      'rows' [] 
      'stype' 'Service' // service or error    
      'startDate' [ NOW 3 d - ISO8601 'T' SPLIT 0 GET '00:00:00Z' ] 'T' JOIN TOTIMESTAMP //1658308294000000   
      'endDate' NOW //1658913094000000   //604800000000

      'myreadtoken' '4vM.a2aMxhl2qCB88Gutar8jXe4R4cqp.QaYYHtumjJg9DCHgXXY1_qIoBhzeh6PIdfX9KLtgeK1O0YHXcr0qA2ZPQrLAurl_PbQAkNjvy3WNq4fNEv434rOXWMsGq55X4qYtTOCtx53bqFwUXsRr6.B3sKF1YE1At8iEE2RyxC9RYOnS7UT4F'
      'writetoken' 'VLMWo2sl_0j0ml.KHLpaa7lr14wLn_fAffcp.pGvv989p7MFOcyR9yF.nOrDqB2jgNR1iN93WCYav0lawYiRt0zuNWvDJhBeaVEzlGwVNBeIlRkhkv1OpUYymIiUZYMR' 
   }
          
          
  'tiles' [
    
		

{                
        'title' 'Plant'                
        'x' 0 'y' 0 'w' 1 'h' 1                
        'type' 'input:list'                
        'macro' <%                     
            //[ $myreadtoken '~.*' {} ] FINDSETS STACKTOLIST 1 GET 'plant' GET LSORT 'listOfPlants' STORE  
            [ 'Usak-SN' 'Usak-GW' 'Yalova' 'Soke-VS' 'Soke-GW' ] 'listOfPlants' STORE         
            {                        
                'data' $listOfPlants                        
                'globalParams' { 'input' { 'value' $plant } } // the initial selected value coming from global vars                        
                'events' [ { 'type' 'variable' 'tags' [ 'plant' 'TurbineId' ] 'selector' 'plant' }  ] // Event definition                    
            }                
        %>  
		
    }  
	{                
        'title' 'Turbines'                
        'x' 0 'y' 1 'w' 1 'h' 6             
        'type' 'input:multi-cb' // 'input:list'  
        'options' { 'eventHandler' 'type=(variable),tag=(plant)'
                     'input' { 'showButton' true 'showFilter' true } } //subscribe to plant event              
        'macro' <%     
             <% $plant 'Usak-SN' CONTAINS %> <% 'Usak' 'plant' STORE 'Sinovel' 'manufacturer' STORE %>
             <% $plant 'Usak-GW' CONTAINS %> <% 'Usak' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
             <% $plant 'Soke-VS' CONTAINS %> <% 'Soke' 'plant' STORE 'Vestas' 'manufacturer' STORE %>
             <% $plant 'Soke-GW' CONTAINS %> <% 'Soke' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
             <% '' 'manufacturer' STORE %> 4 SWITCH

            [ $myreadtoken '~.*' { 'plant' $plant 'manufacturer' $manufacturer } ] FINDSETS STACKTOLIST 1 GET 'TurbineId' GET <% TOLONG %> SORTBY 'listOfTurbines' STORE                     
            {                        
                'data' $listOfTurbines                        
                'globalParams' { 'input' { 'value' $TurbineId } } // the initial selected value coming from global vars                        
                'events' [ { 'type' 'variable' 'tags' [ 'TurbineId' ] 'selector' 'TurbineId' } 
                 { 'type' 'variable' 'tags' [ 'plant' ] 'value' $plant }  ] // Event definition                    
            }                
        %>            
    } 
    
 
	
	{                
        'title' 'Start Date'                
        'x' 1 'y' 0 'w' 2 'h' 1              
        'type' 'input:date'                
        'macro' <%                     
                              
            {                        
                'data' [ NOW 3 d - ISO8601 'T' SPLIT 0 GET '00:00:00Z' ] 'T' JOIN TOTIMESTAMP                        
                'events' [
    { 'type' 'variable' 'tags' [ 'startDate' ] 'selector' 'startDate' }
    ]                    
            }                
        %>            
    } 
	
	{                
        'title' 'End  Date'                
        'x' 3 'y' 0 'w' 2 'h' 1              
        'type' 'input:date'                
        'macro' <%                     
                              
            {                        
                'data' [ NOW ISO8601 'T' SPLIT 0 GET '23:59:59Z' ] 'T' JOIN TOTIMESTAMP                      
                'events' [
    { 'type' 'variable' 'tags' [ 'endDate' ] 'selector' 'endDate' }
    ]                    
            }                
        %>            
    }

         {
      'type' 'input:list' 'x' 5 'y' 0  'w' 2 'h' 1
      'options' { 
                  //'eventHandler' 'type=(variable),tag=(TurbineId|plant)'
                  // suscribe to events
      
      }
      'title' 'Origin'
      'macro' <% 

        [  'Manufacturer' 'Buyer' 'Environmental' ] 'statusList' STORE
        
        {
        'events' [ { 'tags' 'status_origin' 'type' 'variable' 'selector' 'status_origin' } ]
        'globalParams' { 'input' { 'value' $status_origin 'showButton' false } } // default value
        // when refering to a variable defined outside the tile macro and not in dashboard vars,
        // use early binding:  !$xxx  will replace the variable by its content during the first execution.
        'data' $statusList FLATTEN
      } %>
    }

        {
      'type' 'input:list' 'x' 7 'y' 0  'w' 2 'h' 1
      'options' { 
                 //'eventHandler' 'type=(variable),tag=(TurbineId|plant)'
                  // suscribe to events
      
      }
      'title' 'Component'
      'macro' <% 

        [  'Environmental' 'Generator' 'Gearbox' 'Converter' 'Rotor' 'Pitch' 'Yaw' 'Electrical' 'Cooling' 'Auxilary' 'Substation' 'Kiosk' 
        'Blade' 'Brake' 'Generator Cooling' 'Gearbox Cooling' 'CMS' 'Slipring' 'Nacelle' 'Hydrolic System' ] 'statusList' STORE
        
        {
        'events' [ { 'tags' 'comp_code' 'type' 'variable' 'selector' 'comp_code' } ]
        'globalParams' { 'input' { 'value' $comp_code 'showButton' false } } // default value
        // when refering to a variable defined outside the tile macro and not in dashboard vars,
        // use early binding:  !$xxx  will replace the variable by its content during the first execution.
        'data' $statusList FLATTEN
      } %>
    }

 {
      'type' 'input:list' 'x' 9 'y' 0  'w' 1 'h' 1
      'options' { 
             //'eventHandler' 'type=(variable),tag=(TurbineId|plant)'
                  // suscribe to events
      
      }
      'title' 'Type'
      'macro' <% 

        [  'Service' 'Error' 'Maintenance' ] 'typeList' STORE
        
        {
        'events' [ { 'tags' 'stype' 'type' 'variable' 'selector' 'stype' } ]
        'globalParams' { 'input' { 'value' $stype 'showButton' false } } // default value
        // when refering to a variable defined outside the tile macro and not in dashboard vars,
        // use early binding:  !$xxx  will replace the variable by its content during the first execution.
        'data' $typeList FLATTEN
      } %>
    }

      {
      'type' 'button' 
      'title' 'Update Status'
      'options' {
        'button' { 'label' 'Submit' }
        'eventHandler' 'type=variable,tag=(status_event|status_origin|comp_code|stype|plant|TurbineId|duration)'
      }
      'x' 10 'y' 0  'w' 1 'h' 1
      'macro' <% 
        { 
          'data' <%

            0 $status_event SIZE 1 - <% 'i' STORE 
            $status_event $i GET 'outageList' STORE
            $outageList ' ' SPLIT 'outageList' STORE
            $outageList 0 GET 'TurbineId' STORE //turbineid to update '-' SPLIT 1 GET
            $outageList 2 GET TRIM 'Z' + TOTIMESTAMP 3 h - 'starttick' STORE //startdate to update
            $outageList 4 GET TRIM 'Hduration' STORE
            'PT' $Hduration + DURATION 'tduration' STORE //duration in timestamps
            $outageList 8 GET TRIM 'Status' STORE
            $outageList 6 GET TRIM 'lostpwr' STORE
            //$starttick TOTIMESTAMP 'starttick' STORE
            //$outageList 2 GET 'duration' STORE //duration to delete and update
            //$outageList -1 GET TRIM 'endtick' STORE
            //$endtick TOTIMESTAMP 'endtick' STORE

            $starttick 2 m + 'endtick' STORE
            <% $plant 'Usak-SN' ==  $plant 'Usak-GW' == || %> <% 'Usak' 'plant' STORE %> IFT
            <% $plant 'Soke-VS' ==  $plant 'Soke-GW' == || %> <% 'Soke' 'plant' STORE %> IFT

            [ $myreadtoken 'PLC_STATUS' {  'plant' $plant 'TurbineId' $TurbineId } 
             //$starttick '+03:00' ISO8601  $endtick '+03:00' ISO8601
             NOW -1 
             ] FETCH 'y' STORE // get status code of the status
            // $y 0 GET LOCSTRINGS 0 GET HHCODE-> 'lat' STORE 'lon' STORE //lat-lon of turbine to be updated
            $starttick $y FIRSTTICK - 'shift' STORE
            $y $shift TIMESHIFT 'y' STORE
            $y 0 GET NAME '_REPORT' + 'newname' STORE  
            $y { 'origin' $status_origin 'component' $comp_code 'service_type' $stype 'duration' $Hduration 'status' $Status 'tduration' $tduration TOSTRING 'lost_power' $lostpwr } RELABEL $newname RENAME 'new_data' STORE
             $newname '{' + 'plant=' + $plant ',' + 'TurbineId=' $TurbineId + '}' + + + 'gtsselector' STORE
             $writetoken $gtsselector $starttick $endtick MAXLONG DELETE // delete if an old report exist
             $new_data $writetoken UPDATE // write new report

           %> FOR
              
                 { 
           'data' $status_event  // $new_data 
          'events' [ { 'type' 'variable' 'tags' [  'plant' ] 'value' $plant }  ] 
         } 

          %> 
 
        }
      %>
    }

    /// add new maintenance to db
{
         'type' 'button'
         'title' 'Add Maintenance'
         'options' {
          'button' { 'label' 'Add New' }
         }
         'w' 1 'h' 1 'x' 11 'y' 0
         'macro' <% { 'data' <%
            { 'data' ''
             'events' [
                { 'tags' [ 'popup' ] 'type' 'popup'
                  'value'
                  { 'title' 'Enter Maintenance Data'
                  'cellHeight' 80
                  'vars' {  
                            'mplant' 'Yalova'
                            'mTurbineId' '1'
                            'mwinds' '0 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 2450 2500'
                            'mpowers' '0.0 4.0498878 23.628781 58.493583 112.55065 179.99284 253.35229 354.7410 458.4080 574.8670 716.3690 865.4690 1049.0700 1249.6800 1368.4700 1437.6800 1475.1500 1493.6000 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0'
                            'mmanufacturer' 'Manufacturer'
                            'mmodel' 'Model'
                            'mstatus_origin' 'Manufacturer'
                            'mcomp_code' 'Environmental'
                            'mstype' 'Service' 
                            'mcomment' ''
                            'mlostpwr' 0
                            'mstartDate' [ NOW 3 d - ISO8601 'T' SPLIT 0 GET '00:00:00Z' ] 'T' JOIN TOTIMESTAMP //1658308294000000   
                            'mendDate' NOW //1658913094000000   //604800000000

                            'myreadtoken' '4vM.a2aMxhl2qCB88Gutar8jXe4R4cqp.QaYYHtumjJg9DCHgXXY1_qIoBhzeh6PIdfX9KLtgeK1O0YHXcr0qA2ZPQrLAurl_PbQAkNjvy3WNq4fNEv434rOXWMsGq55X4qYtTOCtx53bqFwUXsRr6.B3sKF1YE1At8iEE2RyxC9RYOnS7UT4F'
   
                            'writetoken' 'VLMWo2sl_0j0ml.KHLpaa7lr14wLn_fAffcp.pGvv989p7MFOcyR9yF.nOrDqB2jgNR1iN93WCYav0lawYiRt0zuNWvDJhBeaVEzlGwVNBeIlRkhkv1OpUYymIiUZYMR' 

  }
                  
                   'tiles' [   ///dashboard tile start
       {                
        'title' 'Plant'                
        'x' 0 'y' 0 'w' 2 'h' 1                
        'type' 'input:list'                
        'macro' <%                     
            //[ $myreadtoken '~.*' {} ] FINDSETS STACKTOLIST 1 GET 'plant' GET LSORT 'listOfPlants' STORE  
            [ 'Usak-SN' 'Usak-GW' 'Yalova' 'Soke-VS' 'Soke-GW' ] 'listOfPlants' STORE         
            {                        
                'data' $listOfPlants                        
                'globalParams' { 'input' { 'value' $mplant } } // the initial selected value coming from global vars                        
                'events' [ { 'type' 'variable' 'tags' [ 'mplant' 'mTurbineId' ] 'selector' 'mplant' }  ] // Event definition                    
            }                
        %>  
		
    } 
     	{                
        'title' 'Turbines'                
        'x' 2 'y' 0 'w' 1 'h' 1            
        'type' 'input:list' // 'input:list'  
        'options' { 'eventHandler' 'type=(variable),tag=(mplant)'
                     'input' { 'showButton' true 'showFilter' true } } //subscribe to plant event              
        'macro' <%     
             <% $mplant 'Usak-SN' CONTAINS %> <% 'Usak' 'mplant' STORE 'Sinovel' 'manufacturer' STORE %>
             <% $mplant 'Usak-GW' CONTAINS %> <% 'Usak' 'mplant' STORE 'Goldwind' 'manufacturer' STORE %>
             <% $mplant 'Soke-VS' CONTAINS %> <% 'Soke' 'mplant' STORE 'Vestas' 'manufacturer' STORE %>
             <% $mplant 'Soke-GW' CONTAINS %> <% 'Soke' 'mplant' STORE 'Goldwind' 'manufacturer' STORE %>
             <% '' 'manufacturer' STORE %> 4 SWITCH

            [ $myreadtoken '~.*' { 'plant' $mplant 'manufacturer' $manufacturer } ] FINDSETS STACKTOLIST 1 GET 'TurbineId' GET <% TOLONG %> SORTBY 'listOfTurbines' STORE                     
            {                        
                'data' $listOfTurbines                        
                'globalParams' { 'input' { 'value' $mTurbineId } } // the initial selected value coming from global vars                        
                'events' [ { 'type' 'variable' 'tags' [ 'mTurbineId' ] 'selector' 'mTurbineId' }  ] // Event definition                    
            }                
        %>            
    } 

    {                
        'title' 'Start Date'                
        'x' 3 'y' 0 'w' 2 'h' 1              
        'type' 'input:date'                
        'macro' <%                     
                              
            {                        
                'data' [ NOW 3 d - ISO8601 'T' SPLIT 0 GET '00:00:00Z' ] 'T' JOIN TOTIMESTAMP                        
                'events' [
    { 'type' 'variable' 'tags' [ 'mstartDate' ] 'selector' 'mstartDate' }
    ]                    
            }                
        %>            
    } 
	
	{                
        'title' 'End  Date'                
        'x' 5 'y' 0 'w' 2 'h' 1              
        'type' 'input:date'                
        'macro' <%                     
                              
            {                        
                'data' [ NOW ISO8601 'T' SPLIT 0 GET '23:59:59Z' ] 'T' JOIN TOTIMESTAMP                      
                'events' [
    { 'type' 'variable' 'tags' [ 'mendDate' ] 'selector' 'mendDate' }
    ]                    
            }                
        %>            
    }

    {
      'type' 'input:list' 'x' 7 'y' 0  'w' 2 'h' 1
      'options' { //'eventHandler' 'type=(variable),tag=(mTurbineId|mplant)'
                  // suscribe to events
      
      }
      'title' 'Origin'
      'macro' <% 

        [  'Manufacturer' 'Buyer' 'Environmental' ] 'statusList' STORE
        
        {
        'events' [ { 'tags' 'mstatus_origin' 'type' 'variable' 'selector' 'mstatus_origin' } ]
        'globalParams' { 'input' { 'value' $mstatus_origin 'showButton' false } } // default value
        // when refering to a variable defined outside the tile macro and not in dashboard vars,
        // use early binding:  !$xxx  will replace the variable by its content during the first execution.
        'data' $statusList FLATTEN
      } %>
    }

        {
      'type' 'input:list' 'x' 9 'y' 0  'w' 2 'h' 1
      'options' { //'eventHandler' 'type=(variable),tag=(mTurbineId|mplant)'
                  // suscribe to events
      
      }
      'title' 'Component'
      'macro' <% 

        [  'Environmental' 'Generator' 'Gearbox' 'Converter' 'Rotor' 'Pitch' 'Yaw' 'Electrical' 'Cooling' 'Auxilary' 'Substation' 'Kiosk' 
        'Blade' 'Brake' 'Generator Cooling' 'Gearbox Cooling' 'CMS' 'Slipring' 'Nacelle' 'Hydrolic System' ] 'statusList' STORE
        
        {
        'events' [ { 'tags' 'mcomp_code' 'type' 'variable' 'selector' 'mcomp_code' } ]
        'globalParams' { 'input' { 'value' $mcomp_code 'showButton' false } } // default value
        // when refering to a variable defined outside the tile macro and not in dashboard vars,
        // use early binding:  !$xxx  will replace the variable by its content during the first execution.
        'data' $statusList FLATTEN
      } %>
    }

     {
      'type' 'input:list' 'x' 11 'y' 0  'w' 1 'h' 1
      'options' { //'eventHandler' 'type=(variable),tag=(mTurbineId|mplant)'
                  // suscribe to events
      
      }
      'title' 'Type'
      'macro' <% 

        [  'Service' 'Error' 'Maintenance' ] 'statusList' STORE
        
        {
        'events' [ { 'tags' 'mstype' 'type' 'variable' 'selector' 'mstype' } ]
        'globalParams' { 'input' { 'value' $mstype 'showButton' false } } // default value
        // when refering to a variable defined outside the tile macro and not in dashboard vars,
        // use early binding:  !$xxx  will replace the variable by its content during the first execution.
        'data' $statusList FLATTEN
      } %>
    }

    {
      'type' 'tabular' 'x' 0 'y' 3 'w' 12 'h' 4
      'title' 'Stoppages Table'
      'options' { 'eventHandler' 'type=(variable),tag=(mstartDate|mendDate|mTurbineId|mplant)'
                  // suscribe to events
        'tabular' { 'fixedWidth' true }
      }
      'macro' <%
       // build turbine labels for selected turbines
       // $TurbineId '|' JOIN 'TurbineId' STORE
       // '~(' $TurbineId + ')' + 'TurbineId' STORE

      // select turbines according to list
         <% $mplant 'Usak-SN' CONTAINS %> <% 'Usak' 'mplant' STORE 'Sinovel' 'manufacturer' STORE %>
         <% $mplant 'Usak-GW' CONTAINS %> <% 'Usak' 'mplant' STORE 'Goldwind' 'manufacturer' STORE %>
         <% $mplant 'Soke-VS' CONTAINS %> <% 'Soke' 'mplant' STORE 'Vestas' 'manufacturer' STORE %>
         <% $mplant 'Soke-GW' CONTAINS %> <% 'Soke' 'mplant' STORE 'Goldwind' 'manufacturer' STORE %>
         <%  %> 4 SWITCH


// get statuses for selected turbines
[ $myreadtoken 'PLC_STATUS' {  'plant' $mplant 'TurbineId' $mTurbineId } 
         $mstartDate 1 d - TOSTRING
         $mendDate TOSTRING 
  ] FETCH 'data' STORE
	$data { '.app' '' '.uuid' '' } RELABEL 'data' STORE //relabel the atributes

  [ $data bucketizer.last 0 1 m 0 ] BUCKETIZE FILLPREVIOUS FILLNEXT SORT [ 'TurbineId' ] METASORT 'allbucket' STORE
  $allbucket $mendDate $mstartDate  TIMECLIP 'allbucket' STORE // we took 1 day before for alignment, so correct here
  [] 'rows' STORE
  [] 'trows' STORE //rows with timestamp to send in an event
  [] 'newlist' STORE 

  0 $allbucket SIZE 1 - <% 'b' STORE
    
    $allbucket $b GET 'bucket' STORE

    $bucket LABELS 'TurbineId' GET 'turbine' STORE 
    $bucket LABELS 'plant' GET 'plant' STORE 
    $bucket LABELS 'manufacturer' GET 'manu' STORE
    
      
            

    //check for different manufacturers
    <% $manu 'Goldwind' == %> <% 

      [ 0 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 
1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 ]  // ticks
[] [] []             // latitudes longitudes and elevations
[  0.0 71.93 176.19 309.28 467.23 654.11 878.35 1142.83
                           1458.27 1821.29 2235.62 2693.52 3204.79 3744.81 4281.41 4766.49 
                           5175.59 5513.27 5767.25 5913.71 5973.0 5992.50 5995.0 
                           6000.0 6000.0 6000.0 6000.0 6000.0 6000.0 6000.0 6000.0
                           5993.88 5991.75 5936.25 5802.50 5503.0 5091.0
                           4624.25 4109.25 3553.25 3073.50 2575.25 2187.75 1848.61
                           ] // values
MAKEGTS 'Goldwind' RENAME 'Goldwind' STORE
   [ $Goldwind bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'theoretical' STORE  // interpolate the empty points
   [ $bucket 0 mapper.eq 0 0 0 ] MAP 'Initialization' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'initial' STORE
   [ $bucket 1 mapper.eq 0 0 0 ] MAP 'Stop' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'stop' STORE
   [ $bucket 2 mapper.eq 0 0 0 ] MAP 'Standstill' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'standstill' STORE
   [ $bucket 3 mapper.eq 0 0 0 ] MAP 'Starting' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'start' STORE
   [ $bucket 4 mapper.eq 0 0 0 ] MAP 'Run Up' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'run' STORE
   [ $bucket 5 mapper.eq 0 0 0 ] MAP 'Power Production' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m 1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'power' STORE
   [ $bucket 6 mapper.eq 0 0 0 ] MAP 'Service' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'service' STORE
   [ $bucket 7 mapper.eq 0 0 0 ] MAP 'Fault' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'fault' STORE

  [ $service $fault ] 'gtslist' STORE
   $gtslist SIZE 1 - 'gtslen' STORE

  0 $gtslen <% 'i' STORE $gtslist $i GET 'status' STORE $status NONEMPTY SIZE 1 - 'statuslen' STORE //start of for
    $status 0 GET NAME 'status_name' STORE
    NEWGTS $status 0 GET NAME RENAME 'g' STORE
     <% $statuslen 0 >= %> <%
       0 $statuslen <% 'j' STORE $status $j GET TICKLIST 'ticks' STORE  //start of for
                      $ticks 0 GET 'start' STORE //start of status
                      $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE

                      <% $ticks SIZE 1 > %> <% $ticks 1 GET $ticks 0 GET - 'tduration' STORE
                      
                         //calculate lost power
                               // get wind speed for selected turbines to find lost power
                        [ $myreadtoken 'WIND_SPEED' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                                $ticks 0 GET ISO8601
                                $ticks 1 GET ISO8601
                          ] FETCH 'twind' STORE
                          $twind { '.app' '' '.uuid' '' } RELABEL 'winds' STORE //relabel the atributes

                          [ $twind bucketizer.mean 0 1 m 0 ] BUCKETIZE 'lwind' STORE // bucketize winds for 1 m for lost wind
                          <% $lwind [] != %> <%   

                        //calculate expected power with theoretical curve 
                          $lwind 0 GET 100 * 'lwind' STORE
                          [] 'values' STORE
                          $lwind SIZE 1 - 'len' STORE
                          0 $len <% 'v' STORE
                          $theoretical $lwind VALUES $v GET ATTICK 0 GET -1 GET 'value' STORE  //for theoretical put instead bestcurve
                          <% $value NULL == %> <% 0 'value' STORE %> 
                          <% $value 'value' STORE %> 1 SWITCH
                          $values [ $value ] APPEND 'values' STORE
                          %> FOR

                          $lwind TICKLIST
                          [] [] []
                          $values
                          MAKEGTS 'Expected' RENAME 'lost' STORE 
                          [ $lost bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 60 / TOLONG 'lostpwr' STORE
                      //[ $lwind bucketizer.mean 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'lostpwr' STORE
                      %> <% '0' 'lostpwr' STORE %> IFTE
                    
                      
                       %>
                      <% 'PT2M' DURATION 'tduration' STORE '0' 'expected' STORE '0' 'lostpwr' STORE %> 1 SWITCH

                      $g $ticks 0 GET NaN NaN NaN $duration ADDVALUE DROP
                      $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE  //get human duration

                      // calculate lost power

                      //check if stoppage is reported
                      $ticks 0 GET  $tduration + 2 m + 'endtick' STORE
                      [ $myreadtoken 'PLC_STATUS_REPORT' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                       $ticks 0 GET ISO8601 $endtick ISO8601 ] FETCH 'report' STORE
                       <% $report [] != %> <% 'Reported' 'reported' STORE %> <% 'NoR' 'reported' STORE %> IFTE

                      $rows [ [ $turbine $manu $start $duration $lostpwr $status_name $reported ] ] APPEND 'rows' STORE //rows for display
                      $trows [ [ $turbine $manu $start $tduration $status_name $reported ] ] APPEND 'trows' STORE //rows for events

                    %> FOR  //end of for
              %> 
              <%  $g $status 0 GET FIRSTTICK NaN NaN NaN 0 ADDVALUE DROP 
                   $status 0 GET FIRSTTICK 'start' STORE
                   $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE
                   0 'tduration' STORE
                   $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE 
                   //$rows [ [ $turbine $manu $start $duration $status_name ] ] APPEND 'rows' STORE  
                   
                   %> 1 SWITCH

    $newlist [ $g ]  APPEND 'newlist' STORE
   %> FOR 
 
 
    %>
    //here we start for sinovel
    <% $manu 'Sinovel' == %>
    <%
    
    // create theoretical power VALUES
     [ 0 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 
               1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 2450 2500 ]  // ticks
               [] [] []             // latitudes longitudes and elevations
               [ 0.0 4.0498878 23.628781 58.493583 112.55065 179.99284 253.35229 354.7410
                           458.4080 574.8670 716.3690 865.4690 1049.0700 1249.6800 1368.4700 1437.6800 
                           1475.1500 1493.6000 1500.0 1500.0 1500.0 1500.0 1500.0 
                           1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 
                           1500.0 1500.0 1500.0 1500.0 1500.0 1500.0  1500.0
                            1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0
                            1500.0 1500.0 ] // values
              MAKEGTS 2500 2400 TIMECLIP 'theoretical' STORE

  [ $theoretical bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'theoretical' STORE 

   [ $bucket -1 mapper.eq 0 0 0 ] MAP 'Offline' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'offline' STORE
   [ $bucket 0 mapper.eq 0 0 0 ] MAP 'Start' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'start' STORE
   [ $bucket 1 mapper.eq 0 0 0 ] MAP 'Standby' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'standby' STORE
   [ $bucket 2 mapper.eq 0 0 0 ] MAP 'Production' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'production' STORE
   [ $bucket 3 mapper.eq 0 0 0 ] MAP 'Error' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'error' STORE
   [ $bucket 4 mapper.eq 0 0 0 ] MAP 'Service' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'service' STORE
   [ $bucket 5 mapper.eq 0 0 0 ] MAP 'Low Temp.' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'lowtemp' STORE
   [ $bucket 6 mapper.eq 0 0 0 ] MAP 'High Wind' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'highwind' STORE
    
  [ $offline $start $error $service $lowtemp $highwind ] 'gtslist' STORE // put status gts for turbine in a list
   $gtslist SIZE 1 - 'gtslen' STORE
   // 

   0 $gtslen <% 'i' STORE $gtslist $i GET 'status' STORE $status NONEMPTY SIZE 1 - 'statuslen' STORE //start of for
    $status 0 GET NAME 'status_name' STORE
    NEWGTS $status 0 GET NAME RENAME 'g' STORE
     <% $statuslen 0 >= %> <%
       0 $statuslen <% 'j' STORE $status $j GET TICKLIST 'ticks' STORE  //start of for
                      $ticks 0 GET 'start' STORE //start of status
                      $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE

                      // calculate stoppage duration and power if duration is bigger than 2 m
                      <% $ticks SIZE 1 > %> <% $ticks 1 GET $ticks 0 GET - 'tduration' STORE
                             // get wind speed for selected turbines to find lost power
                        [ $myreadtoken 'WIND_SPEED' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                                $ticks 0 GET ISO8601
                                $ticks 1 GET ISO8601
                          ] FETCH 'twind' STORE
                          $twind { '.app' '' '.uuid' '' } RELABEL 'winds' STORE //relabel the atributes

                          [ $twind bucketizer.mean 0 1 m 0 ] BUCKETIZE 'lwind' STORE // bucketize winds for 1 m for lost wind
                          <% $lwind [] != %> <%   

                        //calculate expected power with theoretical curve 
                          $lwind 0 GET 100 * 'lwind' STORE
                          [] 'values' STORE
                          $lwind SIZE 1 - 'len' STORE
                          0 $len <% 'v' STORE
                          $theoretical $lwind VALUES $v GET ATTICK 0 GET -1 GET 'value' STORE  //for theoretical put instead bestcurve
                          <% $value NULL == %> <% 0 'value' STORE %> 
                          <% $value 'value' STORE %> 1 SWITCH
                          $values [ $value ] APPEND 'values' STORE
                          %> FOR

                          $lwind TICKLIST
                          [] [] []
                          $values
                          MAKEGTS 'Expected' RENAME 'lost' STORE 
                          [ $lost bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 60 / TOLONG 'lostpwr' STORE
                      //[ $lwind bucketizer.mean 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'lostpwr' STORE
                      %> <% '0' 'lostpwr' STORE %> IFTE
                      
                      
                      %>
                      <% 'PT2M' DURATION 'tduration' STORE '0' 'expected' STORE '0' 'lostpwr' STORE %> 1 SWITCH
                      //add duration to new gts
                      $g $ticks 0 GET NaN NaN NaN $tduration ADDVALUE DROP
                      $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE // get human duration

                      
                     

                      //check if stoppage is reported
                      $ticks 0 GET  $tduration + 2 m + 'endtick' STORE
                      [ $myreadtoken 'PLC_STATUS_REPORT' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                       $ticks 0 GET 2 m - ISO8601 $endtick ISO8601 ] FETCH 'report' STORE
                       <% $report [] != %> <% 'NoR' 'reported' STORE %> <% 'Reported' 'reported' STORE %> IFTE

                      $rows [ [ $turbine $manu $start $duration $lostpwr $status_name $reported ] ] APPEND 'rows' STORE //rows for display
                      $trows [ [ $turbine $manu $start $tduration $status_name $reported ] ] APPEND 'trows' STORE //rows for events

                    %> FOR  //end of for
              %> 
              <%  $g $status 0 GET FIRSTTICK NaN NaN NaN 0 ADDVALUE DROP 
                   $status 0 GET FIRSTTICK 'start' STORE
                   $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE
                   0 'tduration' STORE
                   $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE 
                   //$rows [ [ $turbine $manu $start $duration $status_name ] ] APPEND 'rows' STORE  
                   
                   %> 1 SWITCH

    $newlist [ $g ]  APPEND 'newlist' STORE // put start dates and durations to turbine status list

    
   %> FOR //end of for          

    %> 
    //here start for vestas
    <% $manu 'Vestas' == %> <% 
    

    // create theoretical power VALUES
     [ 0 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 
               1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 2450 2500 ]  // ticks
               [] [] []             // latitudes longitudes and elevations
               [ 0.0 22.00 73.00 134.00 209.00 302.00 415.00 552.00
                           714.00 906.00 1123.00 1370.00 1648.00 1950.00 2268.00 2586.00 
                           2868.00 3071.00 3201.00 3266.00 3291.00 3298.00 3299.00 
                           3300.0 3300.0 3300.0 3300.0 3300.0 3300.0 3300.0 
                           3300.0 3300.0 3300.0 3300.0 3300.0 3300.0  3300.0
                            3300.0 3300.0 3300.0 3300.0 3300.0 3300.0 3300.0
                            3300.0 3300.0 ] // values
              MAKEGTS 2500 2400 TIMECLIP 'theoretical' STORE

  [ $theoretical bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'theoretical' STORE 

   [ $bucket 3 mapper.eq 0 0 0 ] MAP 'Run' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'run' STORE
   [ $bucket 2 mapper.eq 0 0 0 ] MAP 'Pause' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'pause' STORE
   [ $bucket 1 mapper.eq 0 0 0 ] MAP 'Stop' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'stop' STORE
   [ $bucket 4 mapper.eq 0 0 0 ] MAP 'Emergency' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'emergency' STORE
    
  [ $pause $stop $emergency ] 'gtslist' STORE // put status gts for turbine in a list
   $gtslist SIZE 1 - 'gtslen' STORE
   // 

   0 $gtslen <% 'i' STORE $gtslist $i GET 'status' STORE $status NONEMPTY SIZE 1 - 'statuslen' STORE //start of for
    $status 0 GET NAME 'status_name' STORE
    NEWGTS $status 0 GET NAME RENAME 'g' STORE
     <% $statuslen 0 >= %> <%
       0 $statuslen <% 'j' STORE $status $j GET TICKLIST 'ticks' STORE  //start of for
                      $ticks 0 GET 'start' STORE //start of status
                      $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE

                      // calculate stoppage duration and power if duration is bigger than 2 m
                      <% $ticks SIZE 1 > %> <% $ticks 1 GET $ticks 0 GET - 'tduration' STORE
                             // get wind speed for selected turbines to find lost power
                        [ $myreadtoken 'WIND_SPEED' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                                $ticks 0 GET ISO8601
                                $ticks 1 GET ISO8601
                          ] FETCH 'twind' STORE
                          $twind { '.app' '' '.uuid' '' } RELABEL 'winds' STORE //relabel the atributes

                          [ $twind bucketizer.mean 0 1 m 0 ] BUCKETIZE 'lwind' STORE // bucketize winds for 1 m for lost wind
                          <% $lwind [] != %> <%   

                        //calculate expected power with theoretical curve 
                          $lwind 0 GET 100 * 'lwind' STORE
                          [] 'values' STORE
                          $lwind SIZE 1 - 'len' STORE
                          0 $len <% 'v' STORE
                          $theoretical $lwind VALUES $v GET ATTICK 0 GET -1 GET 'value' STORE  //for theoretical put instead bestcurve
                          <% $value NULL == %> <% 0 'value' STORE %> 
                          <% $value 'value' STORE %> 1 SWITCH
                          $values [ $value ] APPEND 'values' STORE
                          %> FOR

                          $lwind TICKLIST
                          [] [] []
                          $values
                          MAKEGTS 'Expected' RENAME 'lost' STORE 
                          [ $lost bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 60 / TOLONG 'lostpwr' STORE
                      //[ $lwind bucketizer.mean 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'lostpwr' STORE
                      %> <% '0' 'lostpwr' STORE %> IFTE
                      
                      
                      %>
                      <% 'PT2M' DURATION 'tduration' STORE '0' 'expected' STORE '0' 'lostpwr' STORE %> 1 SWITCH
                      //add duration to new gts
                      $g $ticks 0 GET NaN NaN NaN $tduration ADDVALUE DROP
                      $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE // get human duration

                      
                     

                      //check if stoppage is reported
                      $ticks 0 GET  $tduration + 2 m + 'endtick' STORE
                      [ $myreadtoken 'PLC_STATUS_REPORT' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                       $ticks 0 GET 2 m - ISO8601 $endtick ISO8601 ] FETCH 'report' STORE
                       <% $report [] != %> <% 'NoR' 'reported' STORE %> <% 'Reported' 'reported' STORE %> IFTE

                      $rows [ [ $turbine $manu $start $duration $lostpwr $status_name $reported ] ] APPEND 'rows' STORE //rows for display
                      $trows [ [ $turbine $manu $start $tduration $status_name $reported ] ] APPEND 'trows' STORE //rows for events

                    %> FOR  //end of for
              %> 
              <%  $g $status 0 GET FIRSTTICK NaN NaN NaN 0 ADDVALUE DROP 
                   $status 0 GET FIRSTTICK 'start' STORE
                   $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE
                   0 'tduration' STORE
                   $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE 
                   //$rows [ [ $turbine $manu $start $duration $status_name ] ] APPEND 'rows' STORE  
                   
                   %> 1 SWITCH

    $newlist [ $g ]  APPEND 'newlist' STORE // put start dates and durations to turbine status list

    
   %> FOR //end of for  

    %>
    <% %> 3 SWITCH
   
   
  
  %> FOR

             {
          'columns' [ 'TurbineId' 'Manufacturer' 'Start Date' 'Duration' 'Lost Power(kWh)' 'Status' 'Reported' ]
          'rows' $rows
        } 
        'values' STORE

          {
          'columns' [ 'TurbineId' 'Manufacturer' 'Start Date' 'Duration' 'Status' 'Reported' ]
          'rows' $trows
        } 
        'tvalues' STORE
    
        { 'data' $values
          //'events' [ { 'type' 'variable' 'tags' [ 'result' ] 'value' $tvalues }  ] 
          'globalParams' {
    'tabular' {
      'fixedWidth' true 
      'sortable' true 
      'filterable' true 
    }
  }
  } // data can also be a gts or a list thereof
      %>
    }

                  {
      'type' 'input:text'
      'title' 'Lost Power'
      'w' 1 'h' 1 'x' 0 'y' 1
      'macro' <% { 'data' $mlostpwr 'events' [ { 'tags' [ 'mlostpwr' ] 'type' 'variable' 'selector' 'mlostpwr' } ] } %>
    }

                   {
      'type' 'input:text'
      'title' 'Comments'
      'w' 11 'h' 1 'x' 1 'y' 1
      'macro' <% { 'data' $mcomment 'events' [ { 'tags' [ 'mcomment' ] 'type' 'variable' 'selector' 'mcomment' } ] } %>
    }
     
       {
      'type' 'button'
      'title' 'Save'
      'options' {
        'button' { 'label' 'Save to DB' }
        'eventHandler' 'type=variable,tag=(mstatus_origin|mcomp_code|mstype|mplant|mTurbineId|mstartDate|mendDate|mcomment|mlostpwr)'
      }
      'w' 2 'h' 1 'x' 5 'y' 2
      'macro' <% 
         
           
        {            
            'data' <%

             <% $mplant 'Usak-SN' CONTAINS %> <% 'Usak' 'mplant' STORE 'Sinovel' 'manufacturer' STORE %>
             <% $mplant 'Usak-GW' CONTAINS %> <% 'Usak' 'mplant' STORE 'Goldwind' 'manufacturer' STORE %>
             <% $mplant 'Soke-VS' CONTAINS %> <% 'Soke' 'mplant' STORE 'Vestas' 'manufacturer' STORE %>
             <% $mplant 'Soke-GW' CONTAINS %> <% 'Soke' 'mplant' STORE 'Goldwind' 'manufacturer' STORE %>
             <%  %> 4 SWITCH

             [ $myreadtoken 'PLC_STATUS' {  'plant' $mplant 'TurbineId' $mTurbineId } NOW -1 ] FETCH 'y' STORE // get labels for update
              $mendDate $mstartDate - 'tduration' STORE // timestamp duration of the maintenance
               // find difference for last plc-status and selected stardate to shift the start to selected time
              $y $mstartDate $y LASTTICK - TIMESHIFT 'y' STORE 
              $tduration HUMANDURATION '.' SPLIT 0 GET 'duration' STORE // human duration of the maintenance
              $y 0 GET LOCSTRINGS 0 GET HHCODE-> 'lat' STORE 'lon' STORE //lat-lon of turbine to be updated
              // $y 0 GET NAME '_REPORT' + 'newname' STORE 
              'PLC_STATUS_REPORT' 'newname' STORE
              $y { 'origin' $mstatus_origin 'component' $mcomp_code 'duration' $duration 'status' 'Service' 'service_type' $mstype 'tduration' $tduration TOSTRING 'comment' $mcomment 'lost_power' $mlostpwr TOSTRING 'kWh' + } RELABEL $newname RENAME 'new_data' STORE
              $newname '{' + 'plant=' + $mplant ',' + 'TurbineId=' $mTurbineId + '}' + + + 'gtsselector' STORE
              $new_data $writetoken UPDATE // write new report

              { 'data' $new_data 
              'events' [ { 'type' 'variable' 'tags' [  'plant' ] 'value' $mplant }  ] 
              }
       // $maintenance $writetoken UPDATE
        
            %>

        }
      %>
    }

                ] } /// dashboard tile end
                }
               ]
             }
          %> } %>
       }
       ///////////////////////////////////////////////////////

 {
      'type' 'input:multi-cb' 'x' 1 'y' 1 'w' 4 'h' 6
      'title' 'Stoppages Table'
      'options' { 'eventHandler' 'type=(variable),tag=(startDate|endDate|TurbineId|plant)'
                  // suscribe to events
           
        'tabular' { 'fixedWidth' true }

        'customStyles' {
          '.discovery-tile'
          <'
           font-size: 16px;
          --warp-view-bg-color: #FAFBFF linear-gradient(40deg, #3BBC7D, #1D434C);
           --warp-view-font-color: white;
           --warp-view-input-border-color: black;
          '>
        }
      }
      'macro' <%
       // build turbine labels for selected turbines
        $TurbineId '|' JOIN 'TurbineId' STORE
        '~(' $TurbineId + ')' + 'TurbineId' STORE
      // select turbines according to list
         <% $plant 'Usak-SN' CONTAINS %> <% 'Usak' 'plant' STORE 'Sinovel' 'manufacturer' STORE %>
         <% $plant 'Usak-GW' CONTAINS %> <% 'Usak' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
         <% $plant 'Soke-VS' CONTAINS %> <% 'Soke' 'plant' STORE 'Vestas' 'manufacturer' STORE %>
         <% $plant 'Soke-GW' CONTAINS %> <% 'Soke' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
         <% %> 4 SWITCH


// get statuses for selected turbines
/* [ $myreadtoken 'PLC_STATUS' {  'plant' $plant 'TurbineId' $TurbineId } 
         //$startDate 1 d - TOSTRING
        // $endDate TOSTRING 
        $endDate MAXLONG
  ] */
  
        { 'token' $myreadtoken 
      'class' 'PLC_STATUS' 
      'labels' { 'plant' $plant 'TurbineId' $TurbineId } 
      //'start' $startDate
      'end' NOW 
      'timespan' MAXLONG
      //'sample' 0.5
      'timestep' 1 m
      }
       FETCH 'data' STORE
	$data { '.app' '' '.uuid' '' } RELABEL 'data' STORE //relabel the atributes

  [ $data bucketizer.last 0 1 m 0 ] BUCKETIZE FILLPREVIOUS FILLNEXT SORT [ 'TurbineId' ] METASORT 'allbucket' STORE
  // $allbucket $endDate $startDate  TIMECLIP 'allbucket' STORE // we took 1 day before for alignment, so correct here // old config
  [] 'rows' STORE
  [] 'trows' STORE //rows with timestamp to send in an event
  [] 'newlist' STORE 

  0 $allbucket SIZE 1 - <% 'b' STORE
    
    $allbucket $b GET 'bucket' STORE

    $bucket LABELS 'TurbineId' GET 'turbine' STORE 
    $bucket LABELS 'plant' GET 'plant' STORE 
    $bucket LABELS 'manufacturer' GET 'manu' STORE
    
      
            

    //check for different manufacturers
    <% $manu 'Goldwind' == %> <% 

      [ 0 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 
1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 ]  // ticks
[] [] []             // latitudes longitudes and elevations
[  0.0 71.93 176.19 309.28 467.23 654.11 878.35 1142.83
                           1458.27 1821.29 2235.62 2693.52 3204.79 3744.81 4281.41 4766.49 
                           5175.59 5513.27 5767.25 5913.71 5973.0 5992.50 5995.0 
                           6000.0 6000.0 6000.0 6000.0 6000.0 6000.0 6000.0 6000.0
                           5993.88 5991.75 5936.25 5802.50 5503.0 5091.0
                           4624.25 4109.25 3553.25 3073.50 2575.25 2187.75 1848.61
                           ] // values
MAKEGTS 'Goldwind' RENAME 'Goldwind' STORE
[ $Goldwind bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'theoretical' STORE  // interpolate the empty points

   [ $bucket 0 mapper.eq 0 0 0 ] MAP 'Initialization' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'initial' STORE
   [ $bucket 1 mapper.eq 0 0 0 ] MAP 'Stop' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'stop' STORE
   [ $bucket 2 mapper.eq 0 0 0 ] MAP 'Standstill' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'standstill' STORE
   [ $bucket 3 mapper.eq 0 0 0 ] MAP 'Starting' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'start' STORE
   [ $bucket 4 mapper.eq 0 0 0 ] MAP 'Run Up' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'run' STORE
   [ $bucket 5 mapper.eq 0 0 0 ] MAP 'Power Production' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m 1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'power' STORE
   [ $bucket 6 mapper.eq 0 0 0 ] MAP 'Service' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'service' STORE
   [ $bucket 7 mapper.eq 0 0 0 ] MAP 'Fault' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'fault' STORE
   
  [ $service $fault ] 'gtslist' STORE
   $gtslist SIZE 1 - 'gtslen' STORE

  0 $gtslen <% 'i' STORE $gtslist $i GET 'status' STORE $status NONEMPTY SIZE 1 - 'statuslen' STORE //start of for
    $status 0 GET NAME 'status_name' STORE
    NEWGTS $status 0 GET NAME RENAME 'g' STORE
     <% $statuslen 0 >= %> <%
       0 $statuslen <% 'j' STORE $status $j GET TICKLIST 'ticks' STORE  //start of for
                      $ticks 0 GET 'start' STORE //start of status
                      $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE

                      <% $ticks SIZE 1 > %> <% $ticks 1 GET $ticks 0 GET - 'tduration' STORE
                      
                         //calculate lost power
                               // get wind speed for selected turbines to find lost power
                        [ $myreadtoken 'WIND_SPEED' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                                $ticks 0 GET ISO8601
                                $ticks 1 GET ISO8601
                          ] FETCH 'twind' STORE
                          $twind { '.app' '' '.uuid' '' } RELABEL 'winds' STORE //relabel the atributes

                          [ $twind bucketizer.mean 0 1 m 0 ] BUCKETIZE 'lwind' STORE // bucketize winds for 1 m for lost wind
                          <% $lwind [] != %> <%   

                        //calculate expected power with theoretical curve 
                          $lwind 0 GET 100 * 'lwind' STORE
                          [] 'values' STORE
                          $lwind SIZE 1 - 'len' STORE
                          0 $len <% 'v' STORE
                          $theoretical $lwind VALUES $v GET ATTICK 0 GET -1 GET 'value' STORE  //for theoretical put instead bestcurve
                          <% $value NULL == %> <% 0 'value' STORE %> 
                          <% $value 'value' STORE %> 1 SWITCH
                          $values [ $value ] APPEND 'values' STORE
                          %> FOR

                          $lwind TICKLIST
                          [] [] []
                          $values
                          MAKEGTS 'Expected' RENAME 'lost' STORE 
                          [ $lost bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 60 / TOLONG 'lostpwr' STORE
                      //[ $lwind bucketizer.mean 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'lostpwr' STORE
                      %> <% '0' 'lostpwr' STORE %> IFTE
                    
                      
                       %>
                      <% 'PT2M' DURATION 'tduration' STORE '0' 'expected' STORE '0' 'lostpwr' STORE %> 1 SWITCH

                      $g $ticks 0 GET NaN NaN NaN $duration ADDVALUE DROP
                      $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE  //get human duration

                      // calculate lost power

                      //check if stoppage is reported
                      $ticks 0 GET  $tduration + 2 m + 'endtick' STORE
                      [ $myreadtoken 'PLC_STATUS_REPORT' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                       $ticks 0 GET '+03:00' ISO8601 $endtick '+03:00' ISO8601 ] FETCH 'report' STORE
                       <% $report [] == %> <% 'NoR' 'reported' STORE %> <% 'Reported' 'reported' STORE %> IFTE

                      $rows [ [ $turbine $manu $start $duration $lostpwr $status_name $reported ] ] APPEND 'rows' STORE //rows for display
                      $trows [ [ $turbine $manu $start $tduration $status_name $reported ] ] APPEND 'trows' STORE //rows for events

                    %> FOR  //end of for
              %> 
              <%  $g $status 0 GET FIRSTTICK NaN NaN NaN 0 ADDVALUE DROP 
                   $status 0 GET FIRSTTICK 'start' STORE
                   $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE
                   0 'tduration' STORE
                   $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE 
                   //$rows [ [ $turbine $manu $start $duration $status_name ] ] APPEND 'rows' STORE  
                   
                   %> 1 SWITCH

    $newlist [ $g ]  APPEND 'newlist' STORE
   %> FOR 
 
 
    %>
    //here we start for sinovel
    <% $manu 'Sinovel' == %>
    <%
    
    // create theoretical power VALUES
     [ 0 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 
               1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 2450 2500
               2550 2600 2650 2700 2750 2800 2850 2900 2950 3000 3050 3100 3150 3200 3250 3300 3350 3400 3450 3500 ]  // ticks
               [] [] []             // latitudes longitudes and elevations
               [ 0.0 4.0498878 23.628781 58.493583 112.55065 179.99284 253.35229 354.7410
                           458.4080 574.8670 716.3690 865.4690 1049.0700 1249.6800 1368.4700 1437.6800 
                           1475.1500 1493.6000 1500.0 1500.0 1500.0 1500.0 1500.0 
                           1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 
                           1500.0 1500.0 1500.0 1500.0 1500.0 1500.0  1500.0
                            1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0
                            1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 
                           1500.0 1500.0 1500.0 1500.0 1500.0 1500.0  1500.0
                            1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0
                            1500.0 1500.0 ] // values
              MAKEGTS 3500 3400 TIMECLIP 'theoretical' STORE

  [ $theoretical bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'theoretical' STORE 

   [ $bucket -1 mapper.eq 0 0 0 ] MAP 'Offline' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'offline' STORE
   [ $bucket 0 mapper.eq 0 0 0 ] MAP 'Start' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'start' STORE
   [ $bucket 1 mapper.eq 0 0 0 ] MAP 'Standby' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'standby' STORE
   [ $bucket 2 mapper.eq 0 0 0 ] MAP 'Production' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'production' STORE
   [ $bucket 3 mapper.eq 0 0 0 ] MAP 'Error' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'error' STORE
   [ $bucket 4 mapper.eq 0 0 0 ] MAP 'Service' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'service' STORE
   [ $bucket 5 mapper.eq 0 0 0 ] MAP 'Low Temp.' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'lowtemp' STORE
   [ $bucket 6 mapper.eq 0 0 0 ] MAP 'High Wind' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'highwind' STORE
    
  [ $offline $start $error $service $lowtemp $highwind ] 'gtslist' STORE // put status gts for turbine in a list
   $gtslist SIZE 1 - 'gtslen' STORE
   // 

   0 $gtslen <% 'i' STORE $gtslist $i GET 'status' STORE $status NONEMPTY SIZE 1 - 'statuslen' STORE //start of for
    $status 0 GET NAME 'status_name' STORE
    NEWGTS $status 0 GET NAME RENAME 'g' STORE
     <% $statuslen 0 >= %> <%
       0 $statuslen <% 'j' STORE $status $j GET TICKLIST 'ticks' STORE  //start of for
                      $ticks 0 GET 'start' STORE //start of status
                      $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE

                      // calculate stoppage duration and power if duration is bigger than 2 m
                      <% $ticks SIZE 1 > %> <% $ticks 1 GET $ticks 0 GET - 'tduration' STORE
                             // get wind speed for selected turbines to find lost power
                        [ $myreadtoken 'WIND_SPEED' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                                $ticks 0 GET ISO8601
                                $ticks 1 GET ISO8601
                          ] FETCH 'twind' STORE
                          $twind { '.app' '' '.uuid' '' } RELABEL 'winds' STORE //relabel the atributes

                          [ $twind bucketizer.mean 0 1 m 0 ] BUCKETIZE 'lwind' STORE // bucketize winds for 1 m for lost wind
                          <% $lwind [] != %> <%   

                        //calculate expected power with theoretical curve 
                          $lwind 0 GET 100 * 'lwind' STORE
                          [] 'values' STORE
                          $lwind SIZE 1 - 'len' STORE
                          0 $len <% 'v' STORE
                          $theoretical $lwind VALUES $v GET ATTICK 0 GET -1 GET 'value' STORE  //for theoretical put instead bestcurve
                          <% $value NULL == %> <% 0 'value' STORE %> 
                          <% $value 'value' STORE %> 1 SWITCH
                          $values [ $value ] APPEND 'values' STORE
                          %> FOR

                          $lwind TICKLIST
                          [] [] []
                          $values
                          MAKEGTS 'Expected' RENAME 'lost' STORE 

                          $lwind SIZE 'lost_mins' STORE // lost power minutes
                          [ $lost bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET TODOUBLE 60 / TOLONG 'lostpwr' STORE
                      //[ $lwind bucketizer.mean 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'lostpwr' STORE
                      %> <% '0' 'lostpwr' STORE %> IFTE
                      
                      
                      %>
                      <% 'PT2M' DURATION 'tduration' STORE 

                      [ $myreadtoken 'WIND_SPEED' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                                $ticks 0 GET
                               2 m
                          ] FETCH 'twind' STORE
                          $twind { '.app' '' '.uuid' '' } RELABEL 'winds' STORE //relabel the atributes

                          [ $twind bucketizer.mean 0 1 m 0 ] BUCKETIZE 'lwind' STORE // bucketize winds for 1 m for lost wind
                          <% $lwind [] != %> <%   

                        //calculate expected power with theoretical curve 
                          $lwind 0 GET 100 * 'lwind' STORE
                          [] 'values' STORE
                          $lwind SIZE 1 - 'len' STORE
                          0 $len <% 'v' STORE
                          $theoretical $lwind VALUES $v GET ATTICK 0 GET -1 GET 'value' STORE  //for theoretical put instead bestcurve
                          <% $value NULL == %> <% 0 'value' STORE %> 
                          <% $value 'value' STORE %> 1 SWITCH
                          $values [ $value ] APPEND 'values' STORE
                          %> FOR

                          $lwind TICKLIST
                          [] [] []
                          $values
                          MAKEGTS 'Expected' RENAME 'lost' STORE 

                          $lwind SIZE 'lost_mins' STORE // lost power minutes
                          [ $lost bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET TODOUBLE 60 / TOLONG 'lostpwr' STORE %>
                           <% '0' 'lostpwr' STORE %> IFTE
                      
                      
                      %> 1 SWITCH
                      //add duration to new gts
                      $g $ticks 0 GET NaN NaN NaN $tduration ADDVALUE DROP
                      $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE // get human duration

                      
                     

                      //check if stoppage is reported
                      $ticks 0 GET  $tduration + 2 m + 'endtick' STORE
                      [ $myreadtoken 'PLC_STATUS_REPORT' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                       $ticks 0 GET '+03:00' ISO8601 $endtick '+03:00' ISO8601 ] FETCH 'report' STORE
                       <% $report [] == %> <% 'NoR' 'reported' STORE %> <% 'Reported' 'reported' STORE %> IFTE

                      $rows [ [ $turbine $manu $start $duration $lostpwr $status_name $reported ] ] APPEND 'rows' STORE //rows for display
                      $trows [ [ $turbine $manu $start $tduration $status_name $reported ] ] APPEND 'trows' STORE //rows for events

                    %> FOR  //end of for
              %> 
              <%  $g $status 0 GET FIRSTTICK NaN NaN NaN 0 ADDVALUE DROP 
                   $status 0 GET FIRSTTICK 'start' STORE
                   $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE
                   0 'tduration' STORE
                   $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE 
                   //$rows [ [ $turbine $manu $start $duration $status_name ] ] APPEND 'rows' STORE  
                   
                   %> 1 SWITCH

    $newlist [ $g ]  APPEND 'newlist' STORE // put start dates and durations to turbine status list

    
   %> FOR //end of for          

    %> 
    //here start for vestas
    <% $manu 'Vestas' == %> <% 
    

    // create theoretical power VALUES
     [ 0 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 
               1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 2450 2500 
               2550 2600 2650 2700 2750 2800 2850 2900 2950 3000 3050 3100 3150 3200 3250 3300 3350 3400 3450 3500
               ]  // ticks
               [] [] []             // latitudes longitudes and elevations
               [ 0.0 22.00 73.00 134.00 209.00 302.00 415.00 552.00
                           714.00 906.00 1123.00 1370.00 1648.00 1950.00 2268.00 2586.00 
                           2868.00 3071.00 3201.00 3266.00 3291.00 3298.00 3299.00 
                           3300.0 3300.0 3300.0 3300.0 3300.0 3300.0 3300.0 
                           3300.0 3300.0 3300.0 3300.0 3300.0 3300.0  3300.0
                            3300.0 3300.0 3300.0 3300.0 3300.0 3300.0 3300.0
                            3300.0 3300.0  3300.0 3300.0 3300.0 3300.0 
                           3300.0 3300.0 3300.0 3300.0 3300.0 3300.0  3300.0
                            3300.0 3300.0 3300.0 3300.0 3300.0 3300.0 3300.0
                            3300.0 3300.0 ] // values
              MAKEGTS 3500 3400 TIMECLIP 'theoretical' STORE

  [ $theoretical bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'theoretical' STORE 

   [ $bucket 3 mapper.eq 0 0 0 ] MAP 'Run' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'run' STORE
   [ $bucket 2 mapper.eq 0 0 0 ] MAP 'Pause' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'pause' STORE
   [ $bucket 1 mapper.eq 0 0 0 ] MAP 'Stop' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'stop' STORE
   [ $bucket 4 mapper.eq 0 0 0 ] MAP 'Emergency' RENAME { 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'emergency' STORE
    
  [ $pause $stop $emergency ] 'gtslist' STORE // put status gts for turbine in a list
   $gtslist SIZE 1 - 'gtslen' STORE
   // 

   0 $gtslen <% 'i' STORE $gtslist $i GET 'status' STORE $status NONEMPTY SIZE 1 - 'statuslen' STORE //start of for
    $status 0 GET NAME 'status_name' STORE
    NEWGTS $status 0 GET NAME RENAME 'g' STORE
     <% $statuslen 0 >= %> <%
       0 $statuslen <% 'j' STORE $status $j GET TICKLIST 'ticks' STORE  //start of for
                      $ticks 0 GET 'start' STORE //start of status
                      $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE

                      // calculate stoppage duration and power if duration is bigger than 2 m
                      <% $ticks SIZE 1 > %> <% $ticks 1 GET $ticks 0 GET - 'tduration' STORE
                             // get wind speed for selected turbines to find lost power
                        [ $myreadtoken 'WIND_SPEED' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                                $ticks 0 GET ISO8601
                                $ticks 1 GET ISO8601
                          ] FETCH 'twind' STORE
                          $twind { '.app' '' '.uuid' '' } RELABEL 'winds' STORE //relabel the atributes

                          [ $twind bucketizer.mean 0 1 m 0 ] BUCKETIZE 'lwind' STORE // bucketize winds for 1 m for lost wind
                          <% $lwind [] != %> <%   

                        //calculate expected power with theoretical curve 
                          $lwind 0 GET 100 * 'lwind' STORE
                          [] 'values' STORE
                          $lwind SIZE 1 - 'len' STORE
                          0 $len <% 'v' STORE
                          $theoretical $lwind VALUES $v GET ATTICK 0 GET -1 GET 'value' STORE  //for theoretical put instead bestcurve
                          <% $value NULL == %> <% 0 'value' STORE %> 
                          <% $value 'value' STORE %> 1 SWITCH
                          $values [ $value ] APPEND 'values' STORE
                          %> FOR

                          $lwind TICKLIST
                          [] [] []
                          $values
                          MAKEGTS 'Expected' RENAME 'lost' STORE 
                          [ $lost bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 60 / TOLONG 'lostpwr' STORE
                      //[ $lwind bucketizer.mean 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'lostpwr' STORE
                      %> <% '0' 'lostpwr' STORE %> IFTE
                      
                      
                      %>
                      <% 'PT2M' DURATION 'tduration' STORE '0' 'expected' STORE '0' 'lostpwr' STORE %> 1 SWITCH
                      //add duration to new gts
                      $g $ticks 0 GET NaN NaN NaN $tduration ADDVALUE DROP
                      $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE // get human duration

                      
                     

                      //check if stoppage is reported
                      $ticks 0 GET  $tduration + 2 m + 'endtick' STORE
                      [ $myreadtoken 'PLC_STATUS_REPORT' {  'plant' $plant 'TurbineId' $turbine TOSTRING } 
                       $ticks 0 GET  '+03:00' ISO8601 $endtick '+03:00' ISO8601 ] FETCH 'report' STORE
                       <% $report [] == %> <% 'NoR' 'reported' STORE %> <% 'Reported' 'reported' STORE %> IFTE

                      $rows [ [ $turbine $manu $start $duration $lostpwr $status_name $reported ] ] APPEND 'rows' STORE //rows for display
                      $trows [ [ $turbine $manu $start $tduration $status_name $reported ] ] APPEND 'trows' STORE //rows for events

                    %> FOR  //end of for
              %> 
              <%  $g $status 0 GET FIRSTTICK NaN NaN NaN 0 ADDVALUE DROP 
                   $status 0 GET FIRSTTICK 'start' STORE
                   $start '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE
                   0 'tduration' STORE
                   $tduration HUMANDURATION '.' SPLIT 0 GET 's' + 'duration' STORE 
                   //$rows [ [ $turbine $manu $start $duration $status_name ] ] APPEND 'rows' STORE  
                   
                   %> 1 SWITCH

    $newlist [ $g ]  APPEND 'newlist' STORE // put start dates and durations to turbine status list

    
   %> FOR //end of for  

    %>
    <% %> 3 SWITCH
   
   
  
  %> FOR

             {
          'columns' [ 'TurbineId' 'Manufacturer' 'Start Date' 'Duration' 'Lost Power(kWh)' 'Status' 'Reported' ]
          'rows' $rows
        } 
        'values' STORE

          {
          'columns' [ 'TurbineId' 'Manufacturer' 'Start Date' 'Duration' 'Status' 'Reported' ]
          'rows' $trows
        } 
        'tvalues' STORE

        [] 'outageList' STORE

0 $rows SIZE 1 - <% 'i' STORE 
//'Turbine-' $rows $i GET 0 GET TOSTRING + 'turbine' STORE
$rows $i GET 0 GET TOSTRING 'turbine' STORE
$rows $i GET 2 GET TOSTRING 'start_time' STORE
$rows $i GET 4 GET TOSTRING 'lost_pwr' STORE 
$rows $i GET 5 GET TOSTRING 'status_name' STORE
$rows $i GET 6 GET TOSTRING 'report_status' STORE
$rows $i GET 3 GET 'duration' STORE
$trows $i GET 3 GET 'tduration' STORE 
//$duration HUMANDURATION '.' SPLIT 0 GET 's' + TOSTRING 'hduration' STORE

// find and filter all ongoing stoppages and just list them
$start_time TRIM 'Z' + TOTIMESTAMP $tduration TOLONG + 'end_time' STORE
<% $startDate $end_time < %> 
<% $outageList [  $turbine ' | ' + $start_time + ' | ' + $duration + ' | ' + $lost_pwr + 'kWh | ' + $status_name + ' | ' + $report_status + ] APPEND 'outageList' STORE   %> IFT

 //$outageList [  $turbine ' | ' + $start_time + ' | ' + $duration + ' | ' + $lost_pwr + ' | ' + $status_name + ] APPEND 'outageList' STORE 
%> FOR

$outageList <% '|' SPLIT 1 GET TRIM 'Z' + TOTIMESTAMP %> SORTBY REVERSE 'outageList' STORE

    
        { 'data' $outageList //$values
          'events' [ { 'type' 'variable'  'tags' [ 'status_event' ] 'selector' 'status_event' } 
          { 'type' 'variable' 'tags' [ 'result' ] 'value' $tvalues }  
                               ] 
           'globalParams' { 'input' { 'showButton' true 'showFilter' true } } 
           //'globalParams' {
    //'tabular' {
    //  'fixedWidth' true 
    //  'sortable' true 
    //  'filterable' true 
    //}
    // }
  } // data can also be a gts or a list thereof
      %>
    }


 {
      'type' 'bar' 'x' 5 'y' 1 'w' 5 'h' 2
      'title' 'Status Codes'
      'options' { 'eventHandler' 'type=(variable|data),tag=(result)'
                  // suscribe to events
        'tabular' { 'fixedWidth' true }
      }
      'macro' <%

        [ $myreadtoken '~.*' {} ] FINDSETS STACKTOLIST 1 GET 'TurbineId' GET SIZE 'numOfTurbines' STORE
           [ 'Offline' ] 'offlinerow' STORE 
           [ 'Initialization' ]  'initrow' STORE
           [ 'Stop' ] 'stoprow' STORE
           [ 'Start' ] 'startrow' STORE
           [ 'Service' ] 'servicerow' STORE
           [ 'Error' ] 'errorrow' STORE
           [ 'Low Temp.' ] 'lowrow' STORE
           [ 'High Wind' ] 'highrow' STORE
           [] 'newrows' STORE
           [] 'newcolumns' STORE

// look for each turbine status and sum durations
        1 $numOfTurbines <% 'i' STORE 
                0 'offline' STORE 
                0 'init' STORE
                0 'stop' STORE
                0 'start' STORE
                0 'service' STORE
                0 'error' STORE
                0 'low' STORE
                0 'high' STORE
           $rows <% DROP 0 GET TOLONG $i == %> LFILTER <% DROP 4 GET 'Offline' == %> LFILTER <% 3 GET TOLONG $offline + 'offline' STORE %> FOREACH // 'servis' STORE //get all servis 
           $rows <% DROP 0 GET TOLONG $i == %> LFILTER <% DROP 4 GET 'Initialization' == %> LFILTER <% 3 GET TOLONG $init + 'init' STORE %> FOREACH
           $rows <% DROP 0 GET TOLONG $i == %> LFILTER <% DROP 4 GET 'Stop' == %> LFILTER <% 3 GET TOLONG $stop + 'stop' STORE %> FOREACH
           $rows <% DROP 0 GET TOLONG $i == %> LFILTER <% DROP 4 GET 'Starting' == %> LFILTER <% 3 GET TOLONG $start + 'start' STORE %> FOREACH
           $rows <% DROP 0 GET TOLONG $i == %> LFILTER <% DROP 4 GET 'Start' == %> LFILTER <% 3 GET TOLONG $start + 'start' STORE %> FOREACH
           $rows <% DROP 0 GET TOLONG $i == %> LFILTER <% DROP 4 GET 'Error' == %> LFILTER <% 3 GET TOLONG $error + 'error' STORE %> FOREACH
           $rows <% DROP 0 GET TOLONG $i == %> LFILTER <% DROP 4 GET 'Service' == %> LFILTER <% 3 GET TOLONG $service + 'service' STORE %> FOREACH
           $rows <% DROP 0 GET TOLONG $i == %> LFILTER <% DROP 4 GET 'Low Temp.' == %> LFILTER <% 3 GET TOLONG $low + 'low' STORE %> FOREACH
           $rows <% DROP 0 GET TOLONG $i == %> LFILTER <% DROP 4 GET 'High Wind' == %> LFILTER <% 3 GET TOLONG $high + 'high' STORE %> FOREACH
           
           $offline $init + $stop + $start + $error + $service + $low + $high +  60000000 /  'total' STORE // convert to min 3600000000 for hour
           <% $total 0 > %> <% $newcolumns [ $i ] APPEND 'newcolumns' STORE 
           
           $startrow [ $start 60000000 / ] APPEND 'startrow' STORE
           $offlinerow [ $offline 60000000 / ] APPEND 'offlinerow' STORE
           $initrow [ $init 60000000 / ] APPEND 'initrow' STORE
           $stoprow [ $stop 60000000 / ] APPEND 'stoprow' STORE
           $errorrow [ $error 60000000 / ] APPEND 'errorrow' STORE
           $servicerow [ $service 60000000 / ] APPEND 'servicerow' STORE
           $lowrow [ $low 60000000 / ] APPEND 'lowrow' STORE
           $highrow [ $high 60000000 / ] APPEND 'highrow' STORE %> IFT

        %> FOR
     $newrows [ $startrow ] APPEND [ $offlinerow ] APPEND [ $initrow ] APPEND [ $stoprow ] APPEND [ $errorrow ] APPEND [ $servicerow ] APPEND [ $lowrow ] APPEND [ $highrow ] APPEND  'newrows' STORE

       {
          'columns' $newcolumns //[ 'Status' ]
          'rows' $newrows
        } 
        'values' STORE
    
        { 'data' $values
          //'events' [ { 'type' 'data' 'tags' [ 'rows' ] 'value' $rows }  ] 
          'globalParams' {
                'showLegend' true 

           'bar' { 
      //'horizontal' true 
      'stacked' true 
    }
  }
  } // data can also be a gts or a list thereof
      %>
    }


 {
      'type' 'bar' 'x' 10 'y' 1 'w' 2 'h' 2
      'title' 'Types'
      'options' { 'eventHandler' 'type=(variable|data),tag=(startDate|endDate|plant)'
                  // suscribe to events
        'tabular' { 'fixedWidth' true }
      }
      'macro' <%

        <% $plant 'Usak-SN' CONTAINS %> <% 'Usak' 'plant' STORE 'Sinovel' 'manufacturer' STORE %>
         <% $plant 'Usak-GW' CONTAINS %> <% 'Usak' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
         <% $plant 'Soke-VS' CONTAINS %> <% 'Soke' 'plant' STORE 'Vestas' 'manufacturer' STORE %>
         <% $plant 'Soke-GW' CONTAINS %> <% 'Soke' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
         <%  %> 4 SWITCH

          [ $myreadtoken 'PLC_STATUS_REPORT' {  'plant' $plant } 
            $startDate TOSTRING $endDate TOSTRING  ] FETCH 'y' STORE  // get the status tick to update
            [] 'rows' STORE
            [] 'columns' STORE
            [ 'Service' ] 'manrow' STORE  
            [ 'Error' ] 'buyrow' STORE
            [ 'Maintenance' ] 'mainrow' STORE
             
            <% $y [] == %> <% 'empty' %> 
            <% 
             0 $y SIZE 1 - <% 'i' STORE
                0 'man' STORE 
                0 'buy' STORE
                0 'main' STORE

             $y $i GET LABELS 'TurbineId' GET 'turbine' STORE
             $y $i GET LABELS 'tduration' GET TOLONG 'duration' STORE // TOLONG HUMANDURATION '.' SPLIT 0 GET 's' + 
             $y $i GET LABELS 'status' GET 'status' STORE
             $y $i GET LABELS 'manufacturer' GET 'manufacturer' STORE
             $y $i GET LABELS 'origin' GET 'origin' STORE
             $y $i GET LABELS 'component' GET 'component' STORE
             $y $i GET LABELS 'service_type' GET 'stype' STORE
             $y $i GET FIRSTTICK '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE
             
             <% $stype 'Service' == %> <% $man $duration  + 'man' STORE %>
             <% $stype 'Error' == %> <% $buy $duration  + 'buy' STORE %>
             <% $stype 'Maintenance' == %> <% $main $duration  + 'main' STORE %>
             <% %> 3 SWITCH


             $man $buy +  60000000 /  'total' STORE // conver to min
           <% $total 0 > %> <% $columns [ $turbine ] APPEND 'columns' STORE 
           
           $manrow [ $man 60000000 / ] APPEND 'manrow' STORE 
           $buyrow [ $buy 60000000 / ] APPEND 'buyrow' STORE 
           $mainrow [ $main 60000000 / ] APPEND 'mainrow' STORE
           %> IFT

             //$columns [ $turbine ] APPEND 'columns' STORE
             //$rows [ [ $ $gearrow $ $ $ $ $ $ $auxrow ] ] APPEND 'rows' STORE 
            
            
            
             %> FOR
           $rows [ $manrow ] APPEND [ $buyrow ] APPEND [ $mainrow ] APPEND 'rows' STORE

            %> IFTE
    
          {
          'columns' $columns //[ 'Status' ] // turbine ids list
          'rows' $rows
        } 
        'values' STORE
    
        { 'data' $values
          //'events' [ { 'type' 'data' 'tags' [ 'rows' ] 'value' $rows }  ] 
          'globalParams' { 'showLegend' true 
           'bar' { 
      //'horizontal' true 
      'stacked' true 
    }
  }
  } // data can also be a gts or a list thereof
      %>
    }

    {
      'type' 'bar' 'x' 5 'y' 3 'w' 4 'h' 2
      'title' 'Components'
      'options' { 'eventHandler' 'type=(variable|data),tag=(startDate|endDate|plant)'
                  // suscribe to events
        'tabular' { 'fixedWidth' true }
      }
      'macro' <%

         <% $plant 'Usak-SN' CONTAINS %> <% 'Usak' 'plant' STORE 'Sinovel' 'manufacturer' STORE %>
         <% $plant 'Usak-GW' CONTAINS %> <% 'Usak' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
         <% $plant 'Soke-VS' CONTAINS %> <% 'Soke' 'plant' STORE 'Vestas' 'manufacturer' STORE %>
         <% $plant 'Soke-GW' CONTAINS %> <% 'Soke' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
         <% 'Yalova' 'plant' STORE 'Sinovel' 'manufacturer' STORE %> 4 SWITCH

          [ $myreadtoken 'PLC_STATUS_REPORT' {  'plant' $plant } 
            $startDate TOSTRING $endDate TOSTRING  ] FETCH 'y' STORE  // get the status tick to update
            [] 'rows' STORE
            [] 'columns' STORE
            [ 'Generator' ] 'genrow' STORE  
            [ 'Gearbox' ] 'gearrow' STORE 
            [ 'Converter' ]  'conrow' STORE
            [ 'Rotor' ] 'rotrow' STORE
            [ 'Pitch' ] 'pitrow' STORE
            [ 'Yaw' ] 'yawrow' STORE
            [ 'Electrical' ] 'elecrow' STORE
            [ 'Cooling' ] 'coolrow' STORE
            [ 'Auxilary' ] 'auxrow' STORE
            [ 'Substation' ] 'subrow' STORE
            [ 'Kiosk' ] 'kioskrow' STORE
            <% $y [] == %> <% 'empty' %> 
            <% 
             0 $y SIZE 1 - <% 'i' STORE
                0 'gen' STORE 
                0 'gear' STORE
                0 'con' STORE
                0 'rot' STORE
                0 'pit' STORE
                0 'yaw' STORE
                0 'elec' STORE
                0 'cool' STORE 
                0 'aux' STORE
                0 'sub' STORE
                0 'kiosk' STORE 
             
             $y $i GET LABELS 'TurbineId' GET 'turbine' STORE
             $y $i GET LABELS 'tduration' GET TOLONG 'duration' STORE // TOLONG HUMANDURATION '.' SPLIT 0 GET 's' + 
             $y $i GET LABELS 'status' GET 'status' STORE
             $y $i GET LABELS 'manufacturer' GET 'manufacturer' STORE
             $y $i GET LABELS 'origin' GET 'origin' STORE
             $y $i GET LABELS 'component' GET 'component' STORE
             $y $i GET FIRSTTICK '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE
             
             <% $component 'Generator' == %> <% $gen $duration  + 'gen' STORE %>
             <% $component 'Gearbox' == %> <% $gear $duration  + 'gear' STORE %>
             <% $component 'Converter' == %> <% $con $duration  + 'con' STORE %>
             <% $component 'Rotor' == %> <% $rot $duration  + 'rot' STORE %>
             <% $component 'Pitch' == %> <% $pit $duration  + 'pit' STORE %>
             <% $component 'Yaw' == %> <% $yaw $duration  + 'yaw' STORE %>
             <% $component 'Electrical' == %> <% $elec $duration  + 'elec' STORE %>
             <% $component 'Cooling' == %> <% $cool $duration  + 'cool' STORE %>
             <% $component 'Auxilary' == %> <% $aux $duration  + 'aux' STORE %>
             <% $component 'Substation' == %> <% $sub $duration  + 'sub' STORE %>
             <% $component 'Kiosk' == %> <% $kiosk $duration  + 'kiosk' STORE %>
             <% %> 11 SWITCH


             $gen $gear + $con + $rot + $pit + $yaw + $elec + $cool + $aux + $sub + $kiosk +  60000000 /  'total' STORE // conver to min
           <% $total 0 > %> <% $columns [ $turbine ] APPEND 'columns' STORE 
           
           $genrow [ $gen 60000000 / ] APPEND 'genrow' STORE 
           $gearrow [ $gear 60000000 / ] APPEND 'gearrow' STORE
           $conrow [ $con 60000000 / ] APPEND 'conrow' STORE
           $rotrow [ $rot 60000000 / ] APPEND 'rotrow' STORE
           $pitrow [ $pit 60000000 / ] APPEND 'pitrow' STORE
           $yawrow [ $yaw 60000000 / ] APPEND 'yawrow' STORE
           $elecrow [ $elec 60000000 / ] APPEND 'elecrow' STORE
           $coolrow [ $cool 60000000 / ] APPEND 'coolrow' STORE
           $auxrow [ $aux 60000000 / ] APPEND 'auxrow' STORE 
           $subrow [ $aux 60000000 / ] APPEND 'subrow' STORE 
           $kioskrow [ $aux 60000000 / ] APPEND 'kioskrow' STORE 
           
           %> IFT

             //$columns [ $turbine ] APPEND 'columns' STORE
             //$rows [ [ $ $gearrow $ $ $ $ $ $ $auxrow ] ] APPEND 'rows' STORE 
            
            
            
             %> FOR
           $rows [ $genrow ] APPEND [ $gearrow ] APPEND [ $conrow ] APPEND [ $rotrow ] APPEND [ $pitrow ] APPEND [ $yawrow ] APPEND [ $elecrow ] APPEND [ $coolrow ] APPEND [ $auxrow ] APPEND [ $subrow ] APPEND  [ $kioskrow ] APPEND 'rows' STORE

            %> IFTE
    
          {
          'columns' $columns //[ 'Status' ] // turbine ids list
          'rows' $rows
        } 
        'values' STORE
    
        { 'data' $values
          //'events' [ { 'type' 'data' 'tags' [ 'rows' ] 'value' $rows }  ] 
          'globalParams' { 'showLegend' true 
           'bar' { 
      //'horizontal' true 
      'stacked' true 
    }
  }
  } // data can also be a gts or a list thereof
      %>
    }


    {
      'type' 'bar' 'x' 9 'y' 3 'w' 3 'h' 2
      'title' 'Origin'
      'options' { 'eventHandler' 'type=(variable|data),tag=(startDate|endDate|plant)'
                  // suscribe to events
        'tabular' { 'fixedWidth' true }
      }
      'macro' <%

        <% $plant 'Usak-SN' CONTAINS %> <% 'Usak' 'plant' STORE 'Sinovel' 'manufacturer' STORE %>
         <% $plant 'Usak-GW' CONTAINS %> <% 'Usak' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
         <% $plant 'Soke-VS' CONTAINS %> <% 'Soke' 'plant' STORE 'Vestas' 'manufacturer' STORE %>
         <% $plant 'Soke-GW' CONTAINS %> <% 'Soke' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
         <%  %> 4 SWITCH

          [ $myreadtoken 'PLC_STATUS_REPORT' {  'plant' $plant } 
            $startDate TOSTRING $endDate TOSTRING  ] FETCH 'y' STORE  // get the status tick to update
            [] 'rows' STORE
            [] 'columns' STORE
            [ 'Manufacturer' ] 'manrow' STORE  
            [ 'Buyer' ] 'buyrow' STORE 
            <% $y [] == %> <% 'empty' %> 
            <% 
             0 $y SIZE 1 - <% 'i' STORE
                0 'man' STORE 
                0 'buy' STORE

             $y $i GET LABELS 'TurbineId' GET 'turbine' STORE
             $y $i GET LABELS 'tduration' GET TOLONG 'duration' STORE // TOLONG HUMANDURATION '.' SPLIT 0 GET 's' + 
             $y $i GET LABELS 'status' GET 'status' STORE
             $y $i GET LABELS 'manufacturer' GET 'manufacturer' STORE
             $y $i GET LABELS 'origin' GET 'origin' STORE
             $y $i GET LABELS 'component' GET 'component' STORE
             $y $i GET FIRSTTICK '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE
             
             <% $origin 'Manufacturer' == %> <% $man $duration  + 'man' STORE %>
             <% $origin 'Buyer' == %> <% $buy $duration  + 'buy' STORE %>
             <% %> 2 SWITCH


             $man $buy +  60000000 /  'total' STORE // conver to min
           <% $total 0 > %> <% $columns [ $turbine ] APPEND 'columns' STORE 
           
           $manrow [ $man 60000000 / ] APPEND 'manrow' STORE 
           $buyrow [ $buy 60000000 / ] APPEND 'buyrow' STORE %> IFT

             //$columns [ $turbine ] APPEND 'columns' STORE
             //$rows [ [ $ $gearrow $ $ $ $ $ $ $auxrow ] ] APPEND 'rows' STORE 
            
            
            
             %> FOR
           $rows [ $manrow ] APPEND [ $buyrow ] APPEND 'rows' STORE

            %> IFTE
    
          {
          'columns' $columns //[ 'Status' ] // turbine ids list
          'rows' $rows
        } 
        'values' STORE
    
        { 'data' $values
          //'events' [ { 'type' 'data' 'tags' [ 'rows' ] 'value' $rows }  ] 
          'globalParams' { 'showLegend' true 
           'bar' { 
      //'horizontal' true 
      'stacked' true 
    }
  }
  } // data can also be a gts or a list thereof
      %>
    }

     {
      'type' 'tabular' 'x' 5 'y' 5 'w' 7 'h' 3
      'title' 'Reported Status'
      'options' { 'eventHandler' 'type=(variable),tag=(startDate|endDate|TurbineId|plant)'
                  // suscribe to events
        'tabular' { 'fixedWidth' true }
      }
      'macro' <%
        <% $plant 'Usak-SN' CONTAINS %> <% 'Usak' 'plant' STORE 'Sinovel' 'manufacturer' STORE %>
         <% $plant 'Usak-GW' CONTAINS %> <% 'Usak' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
         <% $plant 'Soke-VS' CONTAINS %> <% 'Soke' 'plant' STORE 'Vestas' 'manufacturer' STORE %>
         <% $plant 'Soke-GW' CONTAINS %> <% 'Soke' 'plant' STORE 'Goldwind' 'manufacturer' STORE %>
         <% %> 4 SWITCH

               [ $myreadtoken 'PLC_STATUS_REPORT' {  'plant' $plant } 
            $startDate TOSTRING $endDate TOSTRING  ] FETCH 'y' STORE  // get the status tick to update
            [] 'rows' STORE
            <% $y [] == %> <% 'empty' %> 
            <% 
             0 $y SIZE 1 - <% 'i' STORE  
             
             $y $i GET LABELS 'TurbineId' GET 'turbine' STORE
             $y $i GET LABELS 'duration' GET 'duration' STORE // TOLONG HUMANDURATION '.' SPLIT 0 GET 's' + 
             $y $i GET LABELS 'status' GET 'status' STORE
             $y $i GET LABELS 'manufacturer' GET 'manufacturer' STORE
             $y $i GET LABELS 'origin' GET 'origin' STORE
             $y $i GET LABELS 'component' GET 'component' STORE
             $y $i GET LABELS 'service_type' GET 'stype' STORE
             $y $i GET FIRSTTICK '+03:00' ISO8601 '.' SPLIT 0 GET 'start' STORE
             $rows [ [ $turbine $manufacturer $start $duration $status $origin $component $stype ] ] APPEND 'rows' STORE 
             %> FOR

            %> IFTE

            {
          'columns' [ 'Turbine' 'Manufacturer' 'Start' 'Duration' 'Status' 'Origin' 'Component' 'Type' ]
          'rows' $rows
        } 
        'values' STORE
    
        { 'data' $values
          'events' [ { 'type' 'data' 'tags' [ 'report' ] 'value' $values }  ] 
         'globalParams' {
    'tabular' {
      'fixedWidth' true 
      'sortable' true 
      'filterable' false 
    }
  }
  } 

      %>
     }
	
  ]


}
