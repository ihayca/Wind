// @endpoint https://resverianaliz.aydemyenilenebilir.com.tr:8889/api/v0/exec
// @theme dark-blue
{
  //'type' 'flex'
  'title' 'Wind Turbine'
  'cellHeight' 100   
  'options' { 
      'scheme' 'BELIZE'
      'timeZone' 'Europe/Istanbul'   
      //'showErrors' true
      'showLoader' true
       
            }
		 
  'vars' {
          'plant' 'Yalova'
	  'TurbineId' '1'
	  'startDate' [ NOW 7 d - ISO8601 'T' SPLIT 0 GET '21:00:00Z' ] 'T' JOIN TOTIMESTAMP //NOW 7 d - // 1658308294000000 // NOW 
          'endDate' NOW //1658913094000000 //604800000000
          'myreadtoken' '4vM.a2aMxhl2qCB88Gutar8jXe4R4cqp.QaYYHtumjJg9DCHgXXY1_qIoBhzeh6PIdfX9KLtgeK1O0YHXcr0qA2ZPQrLAurl_PbQAkNjvy3WNq4fNEv434rOXWMsGq55X4qYtTOCtx53bqFwUXsRr6.B3sKF1YE1At8iEE2RyxC9RYOnS7UT4F'
          'status' 'No Data'
          }
  'tiles' [
    {                
        'title' 'Plant'                
        'x' 0 'y' 0 'w' 1 'h' 1                
        'type' 'input:list'                
        'macro' <%                     
            [ $myreadtoken '~.*' { 'type' 'Wind' } ] FINDSETS STACKTOLIST 1 GET 'plant' GET LSORT 'listOfPlants' STORE                    
            {                        
                'data' $listOfPlants                        
                'globalParams' { 'input' { 'value' $plant 'showButton' true }  } // the initial selected value coming from global vars                        
                'events' [ { 'type' 'variable' 'tags' [ 'plant' ] 'selector' 'plant' }  ] // Event definition                    
            }                
        %>  
		
    }  
	{                
        'title' 'Turbine'                
        'x' 1 'y' 0 'w' 1 'h' 1              
        'type' 'input:list' 
        'options' { 'eventHandler' 'type=(variable),tag=(plant)' }               
        'macro' <%     
                         
            [ $myreadtoken '~.*' { 'plant' $plant  } ] FINDSETS STACKTOLIST 1 GET 'TurbineId' GET <% TOLONG %> SORTBY 'listOfTurbines' STORE                    
            {                        
                'data' $listOfTurbines                        
                'globalParams' { 'input' { 'value' $TurbineId 'showButton' true   } } // the initial selected value coming from global vars                        
                'events' [ { 'type' 'variable' 'tags' [ 'TurbineId' ] 'selector' 'TurbineId' }  ] // Event definition                    
            }                
        %>            
    } 
	
	{                
        'title' 'Start Date'                
        'x' 2 'y' 0 'w' 2 'h' 1              
        'type' 'input:date'                
        'macro' <%                     
                              
            {                        
                'data' [ NOW 8 d - ISO8601 'T' SPLIT 0 GET '21:00:00Z' ] 'T' JOIN TOTIMESTAMP
                'globalParams' { 'input' { 'showButton' true }  }                       
                'events' [
    { 'type' 'variable' 'tags' [ 'startDate' ] 'selector' 'startDate' }
    ]                    
            }                
        %>            
    } 
	
	{                
        'title' 'End  Date'                
        'x' 4 'y' 0 'w' 2 'h' 1              
        'type' 'input:date'                
        'macro' <%                     
                              
            {                        
                'data' [ NOW ISO8601 'T' SPLIT 0 GET '20:59:59Z' ] 'T' JOIN TOTIMESTAMP 
                'globalParams' { 'input' { 'showButton' true }  }                     
                'events' [
    { 'type' 'variable' 'tags' [ 'endDate' ] 'selector' 'endDate' }
    ]                    
            }                
        %>            
    } 
	
	{  
    'title' 'Active / Site Power'   
    'options' { //'autoRefresh' 10 // only selected dates, 
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'maxValue' 100
		'unit' ' kW'
				}
    'x' 6 'y' 0 'w' 2 'h' 1 
    'type' 'linear-gauge' 	
    'macro' <%    
     [ $myreadtoken '~ACTIVE_POWER.*' { 'plant'  $plant 'type' 'Wind' } 
        //NOW 1 d 
        $startDate TOSTRING 
        $endDate TOSTRING
      ] FETCH 'total_data' STORE
     [ $total_data bucketizer.last 0 0 1 ] BUCKETIZE [ SWAP [] reducer.sum ] REDUCE [ SWAP bucketizer.sum 0 0 1 ] BUCKETIZE  VALUES 0 GET 0 GET 'total_power' STORE
    [ $myreadtoken '~ACTIVE_POWER.*' { 'plant'  $plant 'type' 'Wind' 'TurbineId' $TurbineId } 
        //NOW -1 
        $startDate TOSTRING 
        $endDate TOSTRING
      ] FETCH 'data' STORE
     
     [ $data bucketizer.last 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'turbine_power' STORE
     <% $turbine_power 0 == %> <% 0.001 'turbine_power' STORE %>
     <% $turbine_power 'turbine_power' STORE %>
     1 SWITCH
    
      <' 
      %.2f
    '> 
    [ $turbine_power TODOUBLE ] STRINGFORMAT 'turbine_power' STORE
    <' 
      %.2f
    '> 
    [ $total_power TODOUBLE ] STRINGFORMAT 'total_power' STORE

     { 
       'data' $turbine_power 
        'params' [ 
      { 'maxValue' $total_power } 
                ]
      'globalParams' { 'gauge' { 'horizontal' true } }
     }  
  
    %>
    }

	{  
    'title' 'Day / Total Generation'   
    'options' { // 'autoRefresh' 10
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'unit' 'MWh'
				}
    'x' 8 'y' 0 'w' 2 'h' 1 
    'type' 'display' 	
    'macro' <% 
      [ $myreadtoken '~TOTAL_MWh.*' { 'TurbineId' $TurbineId 'plant' $plant } 
         //NOW 1 d 
         $startDate TOSTRING 
	       $endDate TOSTRING
      ] FETCH 'total_data' STORE
      $total_data 0 GET LABELS 'manufacturer' GET 'manu' STORE

      <% $manu 'Goldwind' == %> <%
        NOW ->TSELEMENTS 'now_stamp' STORE
        $now_stamp 0 GET 'year' STORE // year now
        $now_stamp 1 GET 'month' STORE // value of this month
        $now_stamp 2 GET 'day' STORE //day of today

        [ $year $month $day ]  TSELEMENTS-> ISO8601 'start' STORE
        $total_data NOW $start TIMECLIP 0 GET VALUES 'values' STORE 
        <% $values [] == %> <% 0.0 'day_data' STORE %> <% $values -1 GET $values 0 GET - TODOUBLE 1000 / 'day_data' STORE %> IFTE // if no generation until midnight
        [ $total_data bucketizer.last 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET TODOUBLE 1000 / 'total_data' STORE

      %> 
      <% $manu 'Vestas' == %> <%
        NOW ->TSELEMENTS 'now_stamp' STORE
        $now_stamp 0 GET 'year' STORE // year now
        $now_stamp 1 GET 'month' STORE // value of this month
        $now_stamp 2 GET 'day' STORE //day of today

        [ $year $month $day ]  TSELEMENTS-> ISO8601 'start' STORE
        $total_data NOW $start TIMECLIP 0 GET VALUES 'values' STORE 
        <% $values [] == %> <% 0.0 'day_data' STORE %> <% $values -1 GET $values 0 GET - TODOUBLE 1000 / 'day_data' STORE %> IFTE // if no generation until midnight
        [ $total_data bucketizer.last 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET TODOUBLE 1000 / 'total_data' STORE
      %> 
      <%   
     [ $myreadtoken '~DAY_MWh.*' { 'TurbineId' $TurbineId 'plant' $plant } 
         //NOW 1 d 
         $startDate TOSTRING 
	       $endDate TOSTRING
      ] FETCH 'day_data' STORE
 
    [ $day_data bucketizer.last 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET TODOUBLE 'day_data' STORE
    [ $total_data bucketizer.last 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET TODOUBLE 'total_data' STORE
      %> 2 SWITCH

    

    <' 
      %.2f
    '> 
    [ $day_data ] STRINGFORMAT 'day_data' STORE
        <' 
      %.2f
    '> 
    [ $total_data ] STRINGFORMAT 'total_data' STORE

    $day_data TOSTRING ' / ' + $total_data TOSTRING + 'data' STORE
    $data
    %>
    }
	
				{  
    'title' 'Status'   
    'options' { // 'autoRefresh' 10
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'maxValue' 100
		'gauge.horizontal' false
				}
    'x' 11 'y' 0 'w' 1 'h' 1 
    'type' 'display' 	
    'macro' <%    
   //fetch the most recent point of every GTS this token can access
    [ $myreadtoken '~PLC_STATUS.*' { 'TurbineId' $TurbineId 'plant' $plant } 
         //NOW 7 d //
         $startDate TOSTRING 
	       $endDate TOSTRING
      ] FETCH 'data' STORE
	  	$data { '.app' '' '.uuid' '' } RELABEL 'data' STORE 

  [ $data bucketizer.last 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'status' STORE
    $data 0 GET LABELS 'manufacturer' GET 'manu' STORE

    <% $manu 'Goldwind' == %> <% 
   <% $status 0 == %> <% 'Inıtialization' 'status' STORE %>
   <% $status 1 == %> <% 'Stop' 'status' STORE %>
   <% $status 2 == %> <% 'Standstill' 'status' STORE %>
   <% $status 3 == %> <% 'Starting' 'status' STORE %>
   <% $status 4 == %> <% 'Run Up' 'status' STORE %>
   <% $status 5 == %> <% 'Power Production' 'status' STORE %>
   <% $status 6 == %> <% 'Service' 'status' STORE %>
   <% 'fault' 'status' STORE %> 7 SWITCH
    %>
     <% $manu 'Sinovel' == %>   <%
   <% $status 0 == %> <% 'Start' 'status' STORE %>
   <% $status 1 == %> <% 'Standby' 'status' STORE %>
   <% $status 2 == %> <% 'Production' 'status' STORE %>
   <% $status 3 == %> <% 'Error' 'status' STORE %>
   <% $status 4 == %> <% 'Service' 'status' STORE %>
   <% $status 5 == %> <% 'Low Temp.' 'status' STORE %>
   <% $status 6 == %> <% 'High wind' 'status' STORE %>
   <% 'offline' 'status' STORE %> 7 SWITCH
     %>
     <% $manu 'Vestas' == %> <%
   <% $status 3 == %> <% 'Run' 'status' STORE %>
   <% $status 2 == %> <% 'Pause' 'status' STORE %>
   <% $status 1 == %> <% 'Stop' 'status' STORE %>
   <% $status 4 == %> <% 'Emergency' 'status' STORE %>
   <% 'offline' 'status' STORE %> 4 SWITCH
     %> 
     <% %> 3 SWITCH
       
   { 
     'data' $status
     }
	 
    %>
    }
			{  
    'title' 'Temperature' 
    'type' 'linear-gauge' 	  
    'options' { // 'autoRefresh' 10
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'maxValue' 100
		'unit' '°C'
		'gauge' { 'horizontal' true }
				}
    'x' 10 'y' 0 'w' 1 'h' 1 
    
    'macro' <%    
   //fetch the most recent point of every GTS this token can access
    [ $myreadtoken '~EnvTem' { 'TurbineId' $TurbineId 'plant' $plant } 
         $startDate TOSTRING 
		     $endDate TOSTRING
      ] FETCH 'data' STORE
	  	$data { '.app' '' '.uuid' '' } RELABEL 'data' STORE
     $data 0 GET MAX 'max_temp' STORE
      $data 0 GET MIN 'min_temp' STORE
	 [ $data bucketizer.last 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET TODOUBLE 'temp' STORE
   [ $data bucketizer.mean 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET TODOUBLE 'mean_temp' STORE
	$temp 'tostring' STORE
    <' 
      %.1f
    '> 
    [ $tostring ] STRINGFORMAT 'temp' STORE

    <' 
      %.1f
    '> 
    [ $min_temp TODOUBLE ] STRINGFORMAT 'min_temp' STORE

    <' 
      %.1f
    '> 
    [ $max_temp TODOUBLE ] STRINGFORMAT 'max_temp' STORE

    <' 
      %.1f
    '> 
    [ $mean_temp TODOUBLE ] STRINGFORMAT 'mean_temp' STORE

     {
    'key' 'Mean:' $mean_temp + '  Min:' + $min_temp + '  Max:' + $max_temp +
    'value' $temp
     }
      'data' STORE

     { 
     'data' $data 
      'params' [ { 'maxValue' 100 } ]
  'globalParams' { 
   'unit' '°C'
   'gauge' { 'horizontal' true }
  }

    }

    %>
    }
	
    {  
    'title' 'Wind Average'   
    'options' { // 'autoRefresh' 10
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'maxValue' 35
		'unit' ' m/s'
		'description' 'm/s'
				}
    'x' 0 'y' 1 'w' 2 'h' 2 
    'type' 'gauge' 	
    'macro' <%    
   //fetch the most recent point of every GTS this token can access
    [ $myreadtoken '~WIND_SPEED.*' { 'TurbineId' $TurbineId 'plant' $plant } 
         $startDate TOSTRING 
	       $endDate TOSTRING
      ] FETCH 'wind_data' STORE
      $wind_data 0 GET MAX 'max_wind' STORE
      $wind_data 0 GET MIN 'min_wind' STORE
    [ $wind_data bucketizer.mean 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'wind_avg' STORE  //average wind
	$wind_avg 'tostring' STORE
    <' 
      %.1f
    '> 
    [ $tostring ] STRINGFORMAT 'data' STORE

    <' 
      %.1f
    '> 
    [ $min_wind TODOUBLE ] STRINGFORMAT 'min_wind' STORE

    <' 
      %.1f
    '> 
    [ $max_wind TODOUBLE ] STRINGFORMAT 'max_wind' STORE

     {
    'key' 'Min:' $min_wind + '   Max:' + $max_wind +
    'value' $data
     }
      'data' STORE

     { 
     'data' $data 

    }
    %>
    }
	
			{  
    'title' 'Time Availability'   
    'options' { //'autoRefresh' 10
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'maxValue' 100
				}
    'x' 2 'y' 1 'w' 2 'h' 2 
    'type' 'gauge' 	
    'macro' <%    
//fetch the most recent point of every GTS this token can access
   [ $myreadtoken 'PLC_STATUS' { 'plant' $plant 'TurbineId' $TurbineId  } 
      // $start $end 
      //NOW '2023-12-10T00:00:00.000Z' TOTIMESTAMP //will be changed after usak reconnects
      //NOW 2 d
      $startDate TOSTRING  $endDate TOSTRING
            ] FETCH 'data' STORE
	   $data { '.app' '' '.uuid' '' 'type' '' } RELABEL 'data' STORE //relabel the atributes
     NOW  "lastBucket" STORE
     1 m "bucketSpan" STORE // 1 minute
     //'2023-12-10T00:00:00.000Z' TOTIMESTAMP "start" STORE // count = ((end - start) / bucketspan) + 1
     NOW 2 d - "start" STORE // count = ((end - start) / bucketspan) + 1
     $lastBucket $start - $bucketSpan / TOLONG 1 + "bucketCount" STORE
     [ $data bucketizer.last $lastBucket $bucketSpan $bucketCount ] BUCKETIZE FILLPREVIOUS FILLNEXT 'bucket' STORE
     //$bucket NOW $today TIMECLIP 'bucket' STORE //take last 24 hours
    
        $data 0 GET LABELS 'manufacturer' GET 'manu' STORE
      <% $manu 'Sinovel' == %> 
     <%   [ $bucket  []  { 'manufacturer' 'Sinovel' } filter.bylabels ] FILTER VALUES FLATTEN  'ylvlist' STORE
     $ylvlist SIZE 'total_ylv' STORE
     $ylvlist <% DROP 1 == %> LFILTER SIZE 'standby_ylv' STORE 
     $ylvlist <% DROP 2 == %> LFILTER SIZE 'prod_ylv' STORE
     $prod_ylv TODOUBLE $standby_ylv TODOUBLE + $total_ylv TODOUBLE / 100 *  'avail' STORE
      %> IFT
      <% $manu 'Vestas' == %> 
     <% [ $bucket  []  { 'manufacturer' 'Vestas' } filter.bylabels ] FILTER VALUES FLATTEN  'vslist' STORE
     $vslist SIZE 'total_vs' STORE
     $vslist <% DROP 2 == %> LFILTER SIZE 'pause' STORE 
     $vslist <% DROP 3 == %> LFILTER SIZE 'run' STORE
     $run TODOUBLE $pause TODOUBLE + $total_vs TODOUBLE / 100 *  'avail' STORE
     %> IFT

      <% $manu 'Goldwind' == %> 
    <%
     [ $bucket  []  { 'manufacturer' 'Goldwind' } filter.bylabels ] FILTER VALUES FLATTEN  'uskgwlist' STORE
    $uskgwlist SIZE 'total_uskgw' STORE
     $uskgwlist <% DROP 2 == %> LFILTER SIZE 'standby_uskgw' STORE 
     $uskgwlist <% DROP 3 == %> LFILTER SIZE 'start_uskgw' STORE 
     $uskgwlist <% DROP 4 == %> LFILTER SIZE 'run_uskgw' STORE
     $uskgwlist <% DROP 5 == %> LFILTER SIZE 'prod_uskgw' STORE
     $run_uskgw TODOUBLE $standby_uskgw TODOUBLE + $start_uskgw TODOUBLE + $prod_uskgw TODOUBLE + $total_uskgw TODOUBLE / 100 * 'avail' STORE
    %> IFT

	$avail 'tostring' STORE
    <' 
      %.2f
    '> 
    [ $tostring ] STRINGFORMAT 'data' STORE
    $data
    %>
    }
	
			{  
    'title' 'Current / Best Curve'   
    'options' { //'autoRefresh' 10
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'maxValue' 100
				}
    'x' 4 'y' 1 'w' 2 'h' 2 
    'type' 'gauge' 	
    'macro' <%
 //fetch active power for filtering operation
        [ $myreadtoken '~(ACTIVE_POWER|WIND_SPEED).*' { 'plant' $plant 'TurbineId' $TurbineId } 
         //NOW 3 d 
         $startDate TOSTRING  $endDate TOSTRING 
      ] FETCH { '.app' '' '.uuid' '' } RELABEL 'inputs' STORE //get all wind speed for a period
      
     $inputs LASTTICK  "lastBucket" STORE
     10 m "bucketSpan" STORE // 1 minute
     $inputs FIRSTTICK "start" STORE // count = ((end - start) / bucketspan) + 1
     $lastBucket $start - $bucketSpan / TOLONG 1 + "bucketCount" STORE
     [ $inputs bucketizer.mean $lastBucket $bucketSpan $bucketCount ] BUCKETIZE 'bucket' STORE
     $bucket [ NaN NaN NaN 0 ] FILLVALUE SORT 'bucket' STORE // fill all empty ticks with zero

     $bucket 0 GET 'wind' STORE
     $bucket 1 GET 'pow' STORE


// calculate turbine perf according to vendor power curve

     // get best curve of the selected turbine

          { 'token' $myreadtoken 
      'class' '~(WIND_SPEED|ACTIVE_POWER).*' 
      'labels' { 'plant' $plant 'TurbineId' $TurbineId } 
      // 'start' MAXLONG
      'end' NOW
      'timespan' MAXLONG d
      //'sample' 0.5
      'timestep' 10 m
      } FETCH 'x' STORE 

   //[ $myreadtoken '~(WIND_SPEED|ACTIVE_POWER).*' { 'plant' $plant 'TurbineId' $TurbineId } 
   //$startDate TOSTRING 
	 //$endDate TOSTRING
   //  NOW MAXLONG ] FETCH 'x' STORE

           // fill zeros for empty power values and align timeticks
      $x LASTTICK  "xlastBucket" STORE
     10 m "xbucketSpan" STORE // 10 minute
     $x FIRSTTICK "xstart" STORE // count = ((end - start) / bucketspan) + 1
     $xlastBucket $xstart - $xbucketSpan / TOLONG 1 + "xbucketCount" STORE
     [ $x bucketizer.mean $xlastBucket $xbucketSpan $xbucketCount ] BUCKETIZE [ 0.0 0.0 0 0.0 ] FILLVALUE SORT 'x' STORE

           // find both zeros for service time
    [ $x 0.0 mapper.eq 0 0 0 ] MAP 'zeros' STORE
   $zeros 0 GET $zeros 1 GET + TICKLIST 'serviceticks' STORE
    $x 0 GET $serviceticks REMOVETICK 'xwind' STORE 
    $x 1 GET $serviceticks REMOVETICK 'xpower' STORE 
   [ $xwind $xpower ] 'x' STORE

      
     $x NONEMPTY [ SWAP bucketizer.mean 0 10 m 0 ] BUCKETIZE NOW 4 w - 4 w 0 0 ".chunkid" false CHUNK 'chunk' STORE //here we create  1 week chunks of 10 m data

    $chunk 0 GET 'windlist' STORE
    $chunk 1 GET 'powerlist' STORE
    [] 'energy' STORE
    [] 'curves' STORE
   0 $windlist SIZE 1 - <% 'i' STORE
         //create curve of the turbine
  $windlist $i GET 100 * 'bestwind' STORE
  $windlist $i GET LABELS '.chunkid' GET 'name' STORE 
  $powerlist $i GET 'bestpow' STORE

   $bestwind VALUES FLATTEN  // ticks
   [] [] []             // latitudes, longitudes and elevations
   $bestpow VALUES FLATTEN // values
   MAKEGTS
  $name RENAME 3000 2850 TIMECLIP 'bestdata' STORE
  //[ $bestdata bucketizer.mean 0 50 0 ] BUCKETIZE INTERPOLATE SORT 2000 1850 TIMECLIP 'curve' STORE 
  $bestdata DEDUP SORT 55 50 0 1 RLOWESS [ SWAP bucketizer.last 0 50 0 ] BUCKETIZE 3000 2850 TIMECLIP 'curve' STORE // rlowess curve 
  $curves $curve APPEND 'curves' STORE
  $energy [ $curve bucketizer.sum 0 0 1 ] BUCKETIZE APPEND 'energy' STORE 
   %> FOR

   $energy VALUES FLATTEN LSORT -1 GET 'big' STORE
  [ $energy $big mapper.eq 0 0 0 ] MAP NONEMPTY 0 GET NAME 'class' STORE
  [ $curves [] $class filter.byclass ] FILTER 0 GET 'bestcurve' STORE 
   $bestcurve NAME TOLONG ISO8601 'T' SPLIT 0 GET 'time' STORE
   $bestcurve $time RENAME 'bestcurve' STORE
   [ $bestcurve bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'bestcurve' STORE
      
      //create curve of the turbine
  $wind 100 * 'wind' STORE 

   $wind VALUES FLATTEN  // ticks
   [] [] []             // latitudes, longitudes and elevations
   $pow VALUES FLATTEN // values
   MAKEGTS
  'data' RENAME 'data' STORE

   [ $data bucketizer.mean 0 10 0 ] BUCKETIZE SORT 'turbinecurve' STORE 
   
  //calculate expected power with theoretical curve 
  [] 'values' STORE
  $wind SIZE 1 - 'len' STORE
  0 $len <% 'i' STORE
   $bestcurve $wind VALUES $i GET ATTICK 0 GET -1 GET 'value' STORE  //for theoretical put instead bestcurve
   <% $value NULL == %> <% 0 'value' STORE %> 
   <% $value 'value' STORE %> 1 SWITCH
   $values [ $value ] APPEND 'values' STORE
   %> FOR

  $wind TICKLIST
  [] [] []
  $values
  MAKEGTS 'Expected' RENAME 'expected' STORE 


[ $pow bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'generated' STORE
[ $expected bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'expected' STORE

    $generated $expected  - TODOUBLE 60 / 'loss' STORE
    //$generated $loss + 'total' STORE
    //$generated $total / 100 * 'energy_avail' STORE
    $generated $expected / 100 * 'energy_avail' STORE
    $energy_avail 'tostring' STORE
    <' 
      %.2f
    '> 
    [ $tostring ] STRINGFORMAT 'energy_avail' STORE
      
     <' 
      %.2f
    '> 
    [ $loss ] STRINGFORMAT 'loss' STORE
    'Difference:' $loss + 'loss' STORE 
     
      {
    'key' $loss ' kwh' +
    'value' $energy_avail
     }
      'data' STORE
     { 
     'data' $data 

    }
    %>
    }
	
  {  
    'title' 'Current / Vendor Curve'   
    'options' { //'autoRefresh' 10
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'maxValue' 100
				}
    'x' 6 'y' 1 'w' 2 'h' 2 
    'type' 'gauge' 	
    'macro' <%
 //fetch active power for filtering operation
        [ $myreadtoken '~(ACTIVE_POWER|WIND_SPEED).*' { 'plant' $plant 'TurbineId' $TurbineId } 
         //NOW 3 d 
         $startDate TOSTRING  $endDate TOSTRING 
      ] FETCH { '.app' '' '.uuid' '' } RELABEL 'inputs' STORE //get all wind speed for a period
      
     $inputs LASTTICK  "lastBucket" STORE
     10 m "bucketSpan" STORE // 1 minute
     $inputs FIRSTTICK "start" STORE // count = ((end - start) / bucketspan) + 1
     $lastBucket $start - $bucketSpan / TOLONG 1 + "bucketCount" STORE
     [ $inputs bucketizer.mean $lastBucket $bucketSpan $bucketCount ] BUCKETIZE 'bucket' STORE
     $bucket [ NaN NaN NaN 0 ] FILLVALUE SORT 'bucket' STORE // fill all empty ticks with zero

     $bucket 0 GET 'wind' STORE
     $bucket 1 GET 'pow' STORE


// calculate turbine perf according to vendor power curve

      //'curve' STORE
      $wind LABELS 'manufacturer' GET 'manu' STORE
      <% $manu 'Sinovel' == %> 
      <%  [ $myreadtoken '~curve.*' { 'Manufacturer' 'Sinovel' 'Model' 'SN1500' } NOW MAXLONG ] FETCH 'simTurbine' STORE
        [ $simTurbine bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'curve' STORE  // interpolate the empty points
      %> IFT
         <% $manu 'Vestas' == %> 
      <%  [ $myreadtoken '~curve.*' { 'Manufacturer' 'Vestas' 'Model' 'V112' } NOW MAXLONG ] FETCH 'simTurbine' STORE
        [ $simTurbine bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'curve' STORE  // interpolate the empty points
      %> IFT
         <% $manu 'Goldwind' == %> 
      <%  [ $myreadtoken '~curve.*' { 'Manufacturer' 'Goldwind' 'Model' 'GW165-6MW' } NOW MAXLONG ] FETCH 'simTurbine' STORE
        [ $simTurbine bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'curve' STORE  // interpolate the empty points
      %> IFT

     
      //create curve of the turbine
  $wind 100 * 'wind' STORE 

   $wind VALUES FLATTEN  // ticks
   [] [] []             // latitudes, longitudes and elevations
   $pow VALUES FLATTEN // values
   MAKEGTS
  'data' RENAME 'data' STORE

   [ $data bucketizer.mean 0 10 0 ] BUCKETIZE SORT 'turbinecurve' STORE 
   
  //calculate expected power with theoretical curve 
  [] 'values' STORE
  $wind SIZE 1 - 'len' STORE
  0 $len <% 'i' STORE
   $curve $wind VALUES $i GET ATTICK 0 GET -1 GET 'value' STORE  //for theoretical put instead bestcurve
   <% $value NULL == %> <% 0 'value' STORE %> 
   <% $value 'value' STORE %> 1 SWITCH
   $values [ $value ] APPEND 'values' STORE
   %> FOR

  $wind TICKLIST
  [] [] []
  $values
  MAKEGTS 'Expected' RENAME 'expected' STORE 


[ $pow bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'generated' STORE
[ $expected bucketizer.sum 0 0 1 ] BUCKETIZE VALUES 0 GET 0 GET 'expected' STORE

    $generated $expected  - TODOUBLE 60 / 'loss' STORE
    //$generated $loss + 'total' STORE
    //$generated $total / 100 * 'energy_avail' STORE
    $generated $expected / 100 * 'energy_avail' STORE
    $energy_avail 'tostring' STORE
    <' 
      %.2f
    '> 
    [ $tostring ] STRINGFORMAT 'energy_avail' STORE
      
     <' 
      %.2f
    '> 
    [ $loss ] STRINGFORMAT 'loss' STORE
    'Difference:' $loss + 'loss' STORE 
     
      {
    'key' $loss ' kwh' +
    'value' $energy_avail
     }
      'data' STORE
     { 
     'data' $data 

    }
    %>
    }
	
	{
    'title' 'Wind Direction'
    'options' { //'autoRefresh' 10
                'eventHandler' 'type=(variable|zoom|focus),tag=(TurbineId|plant|startDate|endDate)'
		            'showRangeSelector' true

				}
    'x' 8 'y' 1 'w' 4 'h' 4
    'type' 'bar-polar' 'macro' <%
	
 	[ $myreadtoken '~(WIND_SPEED|WIND_DIRECTION).*' { 'plant' $plant 'TurbineId' $TurbineId } 
         $startDate TOSTRING 
	 $endDate TOSTRING
         //NOW 1 d
      ] FETCH 'data' STORE
	   $data { '.app' '' '.uuid' '' } RELABEL 'data' STORE
     [ $data 0 GET bucketizer.last 0 10 m 0 ] BUCKETIZE 0 GET FILLPREVIOUS FILLNEXT SORT VALUES 'degrees' STORE  //align times
     [ $data 1 GET bucketizer.last 0 10 m 0 ] BUCKETIZE 0 GET FILLPREVIOUS FILLNEXT SORT VALUES 'speed' STORE   // align times
     /* 
     subtract 180 for sinovel scada
      $data 0 GET LABELS 'manufacturer' GET 'manu' STORE
      <% $manu 'Sinovel' == %> <% $degrees <% DROP 180 - %> LMAP  'degrees' STORE %> IFT
       */
    $degrees SIZE 1 - 'len' STORE  //total number of data
    //define variables
    0 'n02' STORE 0 'n24' STORE 0 'n46' STORE 0 'n68' STORE 0 'n810' STORE 0 'n1012' STORE 0 'n1214' STORE 0 'n1416' STORE 0 'n1618' STORE 0 'n1820' STORE 0 'n20+' STORE
    0 'nne02' STORE 0 'nne24' STORE 0 'nne46' STORE 0 'nne68' STORE 0 'nne810' STORE 0 'nne1012' STORE 0 'nne1214' STORE 0 'nne1416' STORE 0 'nne1618' STORE 0 'nne1820' STORE 0 'nne20+' STORE
    0 'ne02' STORE 0 'ne24' STORE 0 'ne46' STORE 0 'ne68' STORE 0 'ne810' STORE 0 'ne1012' STORE 0 'ne1214' STORE 0 'ne1416' STORE 0 'ne1618' STORE 0 'ne1820' STORE 0 'ne20+' STORE
    0 'ene02' STORE 0 'ene24' STORE 0 'ene46' STORE 0 'ene68' STORE 0 'ene810' STORE 0 'ene1012' STORE 0 'ene1214' STORE 0 'ene1416' STORE 0 'ene1618' STORE 0 'ene1820' STORE 0 'ene20+' STORE
    0 'e02' STORE 0 'e24' STORE 0 'e46' STORE 0 'e68' STORE 0 'e810' STORE 0 'e1012' STORE 0 'e1214' STORE 0 'e1416' STORE 0 'e1618' STORE 0 'e1820' STORE 0 'e20+' STORE
    0 'ese02' STORE 0 'ese24' STORE 0 'ese46' STORE 0 'ese68' STORE 0 'ese810' STORE 0 'ese1012' STORE 0 'ese1214' STORE 0 'ese1416' STORE 0 'ese1618' STORE 0 'ese1820' STORE 0 'ese20+' STORE
    0 'se02' STORE 0 'se24' STORE 0 'se46' STORE 0 'se68' STORE 0 'se810' STORE 0 'se1012' STORE 0 'se1214' STORE 0 'se1416' STORE 0 'se1618' STORE 0 'se1820' STORE 0 'se20+' STORE
    0 'sse02' STORE 0 'sse24' STORE 0 'sse46' STORE 0 'sse68' STORE 0 'sse810' STORE 0 'sse1012' STORE 0 'sse1214' STORE 0 'sse1416' STORE 0 'sse1618' STORE 0 'sse1820' STORE 0 'sse20+' STORE
    0 's02' STORE 0 's24' STORE 0 's46' STORE 0 's68' STORE 0 's810' STORE 0 's1012' STORE 0 's1214' STORE 0 's1416' STORE 0 's1618' STORE 0 's1820' STORE 0 's20+' STORE
    0 'ssw02' STORE 0 'ssw24' STORE 0 'ssw46' STORE 0 'ssw68' STORE 0 'ssw810' STORE 0 'ssw1012' STORE 0 'ssw1214' STORE 0 'ssw1416' STORE 0 'ssw1618' STORE 0 'ssw1820' STORE 0 'ssw20+' STORE
    0 'sw02' STORE 0 'sw24' STORE 0 'sw46' STORE 0 'sw68' STORE 0 'sw810' STORE 0 'sw1012' STORE 0 'sw1214' STORE 0 'sw1416' STORE 0 'sw1618' STORE 0 'sw1820' STORE 0 'sw20+' STORE
    0 'wsw02' STORE 0 'wsw24' STORE 0 'wsw46' STORE 0 'wsw68' STORE 0 'wsw810' STORE 0 'wsw1012' STORE 0 'wsw1214' STORE 0 'wsw1416' STORE 0 'wsw1618' STORE 0 'wsw1820' STORE 0 'wsw20+' STORE
    0 'w02' STORE 0 'w24' STORE 0 'w46' STORE 0 'w68' STORE 0 'w810' STORE 0 'w1012' STORE 0 'w1214' STORE 0 'w1416' STORE 0 'w1618' STORE 0 'w1820' STORE 0 'w20+' STORE
    0 'wnw02' STORE 0 'wnw24' STORE 0 'wnw46' STORE 0 'wnw68' STORE 0 'wnw810' STORE 0 'wnw1012' STORE 0 'wnw1214' STORE 0 'wnw1416' STORE 0 'wnw1618' STORE 0 'wnw1820' STORE 0 'wnw20+' STORE
    0 'nw02' STORE 0 'nw24' STORE 0 'nw46' STORE 0 'nw68' STORE 0 'nw810' STORE 0 'nw1012' STORE 0 'nw1214' STORE 0 'nw1416' STORE 0 'nw1618' STORE 0 'nw1820' STORE 0 'nw20+' STORE
    0 'nnw02' STORE 0 'nnw24' STORE 0 'nnw46' STORE 0 'nnw68' STORE 0 'nnw810' STORE 0 'nnw1012' STORE 0 'nnw1214' STORE 0 'nnw1416' STORE 0 'nnw1618' STORE 0 'nnw1820' STORE 0 'nnw20+' STORE
     
    // wind direction macros
     <% $deg 22.5 <  %> 'northlt' STORE <% $deg 337.5 >  %> 'northgt' STORE  //N 348.75 - 11.25
    // <% $deg 11.25 >  %> 'nnegt' STORE <% $deg 33.75 <  %> 'nnelt' STORE       //NNE 11.25 - 33.75
     <% $deg 22.5 >  %> 'negt' STORE <% $deg 67.5 <  %> 'nelt' STORE         //NE 33.75 - 56.25
    // <% $deg 56.25 >  %> 'enegt' STORE <% $deg 78.75 <  %> 'enelt' STORE       //ENE 56.25 - 78.75
     <% $deg 67.5 >  %> 'egt' STORE <% $deg 112.5 <  %> 'elt' STORE          //E 78.75 - 101.25
    // <% $deg 101.25 >  %> 'esegt' STORE <% $deg 123.75 <  %> 'eselt' STORE     //ESE 101.25 - 123.75
     <% $deg 112.5 >  %> 'segt' STORE <% $deg 157.5 <  %> 'selt' STORE       //SE 123.75 - 146.25
    //  <% $deg 146.25 >  %> 'ssegt' STORE <% $deg 168.75 <  %> 'sselt' STORE     //SSE 146.25 - 168.75
     <% $deg 157.5 >  %> 'sgt' STORE <% $deg 202.5 <  %> 'slt' STORE         //S 168.75 - 191.25
     // <% $deg 191.25 >  %> 'sswgt' STORE <% $deg 213.75 <  %> 'sswlt' STORE     //SSW 191.25 - 213.75
     <% $deg 202.5 >  %> 'swgt' STORE <% $deg 247.5 <  %> 'swlt' STORE       //SW 213.75 - 236.25
     // <% $deg 236.25 >  %> 'wswgt' STORE <% $deg 258.75 <  %> 'wswlt' STORE     //WSW 236.25 - 258.75
     <% $deg 247.5 >  %> 'wgt' STORE <% $deg 292.5 <  %> 'wlt' STORE         //W 258.75 - 281.25
     // <% $deg 281.25 >  %> 'wnwgt' STORE <% $deg 303.75 <  %> 'wnwlt' STORE     //WNW 281.25 - 303.75
     <% $deg 292.5 >  %> 'nwgt' STORE <% $deg 337.5 <  %> 'nwlt' STORE       //NW 303.75 - 326.25
     //<% $deg 326.25 >  %> 'nnwgt' STORE <% $deg 348.75 <  %> 'nnwlt' STORE     //NNW 326.25 - 348.75

     // wind speed macros 
     <% $spe 0.0 >=  %> '02gt' STORE <% $spe 4 <  %> '02lt' STORE     //speed 0-2 m/s
     // <% $spe 2.0 >=  %> '24gt' STORE <% $spe 4 <  %> '24lt' STORE     //speed 2-4 m/s
     <% $spe 4.0 >=  %> '46gt' STORE <% $spe 8 <  %> '46lt' STORE     //speed 4-6 m/s
     // <% $spe 6.0 >=  %> '68gt' STORE <% $spe 8 <  %> '68lt' STORE     //speed 6-8 m/s
     <% $spe 8.0 >=  %> '810gt' STORE <% $spe 12 <  %> '810lt' STORE     //speed 8-10 m/s
     // <% $spe 10.0 >=  %> '1012gt' STORE <% $spe 12 <  %> '1012lt' STORE     //speed 10-12 m/s
     <% $spe 12.0 >=  %> '1214gt' STORE <% $spe 16 <  %> '1214lt' STORE     //speed 12-14 m/s
     // <% $spe 14.0 >=  %> '1416gt' STORE <% $spe 16 <  %> '1416lt' STORE     //speed 14-16 m/s
     <% $spe 16.0 >=  %> '1618gt' STORE <% $spe 20 <  %> '1618lt' STORE     //speed 16-18 m/s
     // <% $spe 18.0 >=  %> '1820gt' STORE <% $spe 20 <  %> '1820lt' STORE     //speed 18-20 m/s
     <% $spe 20.0 >=  %> '20gt' STORE <% $spe 50 <  %> '20lt' STORE     //speed 20+ m/s 

     //move along the list
    0 $len <% 'i' STORE 

     $degrees $i GET 'deg' STORE
     $speed $i GET 'spe' STORE

     //define wind direction
     <% [ @northlt @northgt ] OR %> <%  //$deg TOSTRING 'N' +
          //define speed bucket 
          <% [ @02gt @02lt ] AND %> <%  $n02 1 + 'n02' STORE  %>  //$spe TOSTRING ' 02' +
          //<% [ @24gt @24lt ] AND %> <%  $n24 1 + 'n24' STORE %> //$spe TOSTRING ' 24' + 
          <% [ @46gt @46lt ] AND %> <%  $n46 1 + 'n46' STORE %>
          // <% [ @68gt @68lt ] AND %> <%  $n68 1 + 'n68' STORE %>
          <% [ @810gt @810lt ] AND %> <%  $n810 1 + 'n810' STORE %>
          // <% [ @1012gt @1012lt ] AND %> <%  $n1012 1 + 'n1012' STORE %>
          <% [ @1214gt @1214lt ] AND %> <%  $n1214 1 + 'n1214' STORE %>
          // <% [ @1416gt @1416lt ] AND %> <%  $n1416 1 + 'n1416' STORE %>
          <% [ @1618gt @1618lt ] AND %> <%  $n1618 1 + 'n1618' STORE %>
          // <% [ @1820gt @1820lt ] AND %> <%  $n1820 1 + 'n1820' STORE %>
          <% $n20+ 1 + 'n20+' STORE %>
          5 SWITCH
 
      %> // north

     <% [ @negt @nelt ] AND %> <%  //$deg TOSTRING 'NE' + 
      //define speed bucket 
          <% [ @02gt @02lt ] AND %> <%  $ne02 1 + 'ne02' STORE  %>  //$spe TOSTRING ' 02' +
          // <% [ @24gt @24lt ] AND %> <%  $ne24 1 + 'ne24' STORE %> //$spe TOSTRING ' 24' + 
          <% [ @46gt @46lt ] AND %> <%  $ne46 1 + 'ne46' STORE %>
          // <% [ @68gt @68lt ] AND %> <%  $ne68 1 + 'ne68' STORE %>
          <% [ @810gt @810lt ] AND %> <%  $ne810 1 + 'ne810' STORE %>
          // <% [ @1012gt @1012lt ] AND %> <%  $ne1012 1 + 'ne1012' STORE %>
          <% [ @1214gt @1214lt ] AND %> <%  $ne1214 1 + 'ne1214' STORE %>
          // <% [ @1416gt @1416lt ] AND %> <%  $ne1416 1 + 'ne1416' STORE %>
          <% [ @1618gt @1618lt ] AND %> <%  $ne1618 1 + 'ne1618' STORE %>
          // <% [ @1820gt @1820lt ] AND %> <%  $ne1820 1 + 'ne1820' STORE %>
          <% $ne20+ 1 + 'ne20+' STORE %>
          5 SWITCH
 
     %> //NE

     <% [ @egt @elt ] AND %> <% 
       //define speed bucket 
          <% [ @02gt @02lt ] AND %> <%  $e02 1 + 'e02' STORE  %>  //$spe TOSTRING ' 02' +
          // <% [ @24gt @24lt ] AND %> <%  $e24 1 + 'e24' STORE %> //$spe TOSTRING ' 24' + 
          <% [ @46gt @46lt ] AND %> <%  $e46 1 + 'e46' STORE %>
          //<% [ @68gt @68lt ] AND %> <%  $e68 1 + 'e68' STORE %>
          <% [ @810gt @810lt ] AND %> <%  $e810 1 + 'e810' STORE %>
          //<% [ @1012gt @1012lt ] AND %> <%  $e1012 1 + 'e1012' STORE %>
          <% [ @1214gt @1214lt ] AND %> <%  $e1214 1 + 'e1214' STORE %>
          //<% [ @1416gt @1416lt ] AND %> <%  $e1416 1 + 'e1416' STORE %>
          <% [ @1618gt @1618lt ] AND %> <%  $e1618 1 + 'e1618' STORE %>
          //<% [ @1820gt @1820lt ] AND %> <%  $e1820 1 + 'e1820' STORE %>
          <% $e20+ 1 + 'e20+' STORE %>
          5 SWITCH
 
      %> //E

     <% [ @segt @selt ] AND %> <%  
       //define speed bucket 
          <% [ @02gt @02lt ] AND %> <%  $se02 1 + 'se02' STORE  %>  //$spe TOSTRING ' 02' +
          //<% [ @24gt @24lt ] AND %> <%  $se24 1 + 'se24' STORE %> //$spe TOSTRING ' 24' + 
          <% [ @46gt @46lt ] AND %> <%  $se46 1 + 'se46' STORE %>
          //<% [ @68gt @68lt ] AND %> <%  $se68 1 + 'se68' STORE %>
          <% [ @810gt @810lt ] AND %> <%  $se810 1 + 'se810' STORE %>
          //<% [ @1012gt @1012lt ] AND %> <%  $se1012 1 + 'se1012' STORE %>
          <% [ @1214gt @1214lt ] AND %> <%  $se1214 1 + 'se1214' STORE %>
          //<% [ @1416gt @1416lt ] AND %> <%  $se1416 1 + 'se1416' STORE %>
          <% [ @1618gt @1618lt ] AND %> <%  $se1618 1 + 'se1618' STORE %>
          //<% [ @1820gt @1820lt ] AND %> <%  $se1820 1 + 'se1820' STORE %>
          <% $se20+ 1 + 'se20+' STORE %>
          5 SWITCH
 
      %> //SE

     <% [ @sgt @slt ] AND %> <%  
       //define speed bucket 
          <% [ @02gt @02lt ] AND %> <%  $s02 1 + 's02' STORE  %>  //$spe TOSTRING ' 02' +
          //<% [ @24gt @24lt ] AND %> <%  $s24 1 + 's24' STORE %> //$spe TOSTRING ' 24' + 
          <% [ @46gt @46lt ] AND %> <%  $s46 1 + 's46' STORE %>
          //<% [ @68gt @68lt ] AND %> <%  $s68 1 + 's68' STORE %>
          <% [ @810gt @810lt ] AND %> <%  $s810 1 + 's810' STORE %>
         // <% [ @1012gt @1012lt ] AND %> <%  $s1012 1 + 's1012' STORE %>
          <% [ @1214gt @1214lt ] AND %> <%  $s1214 1 + 's1214' STORE %>
          //<% [ @1416gt @1416lt ] AND %> <%  $s1416 1 + 's1416' STORE %>
          <% [ @1618gt @1618lt ] AND %> <%  $s1618 1 + 's1618' STORE %>
          //<% [ @1820gt @1820lt ] AND %> <%  $s1820 1 + 's1820' STORE %>
          <% $s20+ 1 + 's20+' STORE %>
          5 SWITCH
 
      %> //S

     <% [ @swgt @swlt ] AND %> <%  
       //define speed bucket 
          <% [ @02gt @02lt ] AND %> <%  $sw02 1 + 'sw02' STORE  %>  //$spe TOSTRING ' 02' +
          //<% [ @24gt @24lt ] AND %> <%  $sw24 1 + 'sw24' STORE %> //$spe TOSTRING ' 24' + 
          <% [ @46gt @46lt ] AND %> <%  $sw46 1 + 'sw46' STORE %>
          //<% [ @68gt @68lt ] AND %> <%  $sw68 1 + 'sw68' STORE %>
          <% [ @810gt @810lt ] AND %> <%  $sw810 1 + 'sw810' STORE %>
          //<% [ @1012gt @1012lt ] AND %> <%  $sw1012 1 + 'sw1012' STORE %>
          <% [ @1214gt @1214lt ] AND %> <%  $sw1214 1 + 'sw1214' STORE %>
          //<% [ @1416gt @1416lt ] AND %> <%  $sw1416 1 + 'sw1416' STORE %>
          <% [ @1618gt @1618lt ] AND %> <%  $sw1618 1 + 'sw1618' STORE %>
          //<% [ @1820gt @1820lt ] AND %> <%  $sw1820 1 + 'sw1820' STORE %>
          <% $sw20+ 1 + 'sw20+' STORE %>
          5 SWITCH
 
      %> //SW

     <% [ @wgt @wlt ] AND %> <%  
      //define speed bucket 
          <% [ @02gt @02lt ] AND %> <%  $w02 1 + 'w02' STORE  %>  //$spe TOSTRING ' 02' +
          //<% [ @24gt @24lt ] AND %> <%  $w24 1 + 'w24' STORE %> //$spe TOSTRING ' 24' + 
          <% [ @46gt @46lt ] AND %> <%  $w46 1 + 'w46' STORE %>
          //<% [ @68gt @68lt ] AND %> <%  $w68 1 + 'w68' STORE %>
          <% [ @810gt @810lt ] AND %> <%  $w810 1 + 'w810' STORE %>
          //<% [ @1012gt @1012lt ] AND %> <%  $w1012 1 + 'w1012' STORE %>
          <% [ @1214gt @1214lt ] AND %> <%  $w1214 1 + 'w1214' STORE %>
          //<% [ @1416gt @1416lt ] AND %> <%  $w1416 1 + 'w1416' STORE %>
          <% [ @1618gt @1618lt ] AND %> <%  $w1618 1 + 'w1618' STORE %>
          //<% [ @1820gt @1820lt ] AND %> <%  $w1820 1 + 'w1820' STORE %>
          <% $w20+ 1 + 'w20+' STORE %>
          5 SWITCH
      %> //W

     //<% [ @nwgt @nwlt ] AND %> 
     <%  
      //define speed bucket 
          <% [ @02gt @02lt ] AND %> <%  $nw02 1 + 'nw02' STORE  %>  //$spe TOSTRING ' 02' +
          //<% [ @24gt @24lt ] AND %> <%  $nw24 1 + 'nw24' STORE %> //$spe TOSTRING ' 24' + 
          <% [ @46gt @46lt ] AND %> <%  $nw46 1 + 'nw46' STORE %>
         // <% [ @68gt @68lt ] AND %> <%  $nw68 1 + 'nw68' STORE %>
          <% [ @810gt @810lt ] AND %> <%  $nw810 1 + 'nw810' STORE %>
          //<% [ @1012gt @1012lt ] AND %> <%  $nw1012 1 + 'nw1012' STORE %>
          <% [ @1214gt @1214lt ] AND %> <%  $nw1214 1 + 'nw1214' STORE %>
          //<% [ @1416gt @1416lt ] AND %> <%  $nw1416 1 + 'nw1416' STORE %>
          <% [ @1618gt @1618lt ] AND %> <%  $nw1618 1 + 'nw1618' STORE %>
          //<% [ @1820gt @1820lt ] AND %> <%  $nw1820 1 + 'nw1820' STORE %>
          <% $nw20+ 1 + 'nw20+' STORE %>
          5 SWITCH
      %> //NW
   
      7 SWITCH
        
     %> FOR

//convert to percent
$n02 TODOUBLE $len / TODOUBLE 100 * 'n02' STORE  
//$n24 TODOUBLE $len / TODOUBLE 100 * 'n24' STORE 
$n46 TODOUBLE $len / TODOUBLE 100 * 'n46' STORE
//$n68 TODOUBLE $len / TODOUBLE 100 * 'n68' STORE
$n810 TODOUBLE $len / TODOUBLE 100 * 'n810' STORE
//$n1012 TODOUBLE $len / TODOUBLE 100 * 'n1012' STORE
$n1214 TODOUBLE $len / TODOUBLE 100 * 'n1214' STORE
//$n1416 TODOUBLE $len / TODOUBLE 100 * 'n1416' STORE
$n1618 TODOUBLE $len / TODOUBLE 100 * 'n1618' STORE
//$n1820 TODOUBLE $len / TODOUBLE 100 * 'n1820' STORE
$n20+ TODOUBLE $len / TODOUBLE 100 * 'n20+' STORE


$ne02 TODOUBLE $len / TODOUBLE 100 * 'ne02' STORE 
//$ne24 TODOUBLE $len / TODOUBLE 100 * 'ne24' STORE 
$ne46 TODOUBLE $len / TODOUBLE 100 * 'ne46' STORE
//$ne68 TODOUBLE $len / TODOUBLE 100 * 'ne68' STORE
$ne810 TODOUBLE $len / TODOUBLE 100 * 'ne810' STORE
//$ne1012 TODOUBLE $len / TODOUBLE 100 * 'ne1012' STORE
$ne1214 TODOUBLE $len / TODOUBLE 100 * 'ne1214' STORE
//$ne1416 TODOUBLE $len / TODOUBLE 100 * 'ne1416' STORE
$ne1618 TODOUBLE $len / TODOUBLE 100 * 'ne1618' STORE
//$ne1820 TODOUBLE $len / TODOUBLE 100 * 'ne1820' STORE
$ne20+ TODOUBLE $len / TODOUBLE 100 * 'ne20+' STORE


$e02 TODOUBLE $len / TODOUBLE 100 * 'e02' STORE 
//$e24 TODOUBLE $len / TODOUBLE 100 * 'e24' STORE 
$e46 TODOUBLE $len / TODOUBLE 100 * 'e46' STORE
//$e68 TODOUBLE $len / TODOUBLE 100 * 'e68' STORE
$e810 TODOUBLE $len / TODOUBLE 100 * 'e810' STORE
//$e1012 TODOUBLE $len / TODOUBLE 100 * 'e1012' STORE
$e1214 TODOUBLE $len / TODOUBLE 100 * 'e1214' STORE
//$e1416 TODOUBLE $len / TODOUBLE 100 * 'e1416' STORE
$e1618 TODOUBLE $len / TODOUBLE 100 * 'e1618' STORE
//$e1820 TODOUBLE $len / TODOUBLE 100 * 'e1820' STORE
$e20+ TODOUBLE $len / TODOUBLE 100 * 'e20+' STORE


$se02 TODOUBLE $len / TODOUBLE 100 * 'se02' STORE 
//$se24 TODOUBLE $len / TODOUBLE 100 * 'se24' STORE 
$se46 TODOUBLE $len / TODOUBLE 100 * 'se46' STORE
//$se68 TODOUBLE $len / TODOUBLE 100 * 'se68' STORE
$se810 TODOUBLE $len / TODOUBLE 100 * 'se810' STORE
//$se1012 TODOUBLE $len / TODOUBLE 100 * 'se1012' STORE
$se1214 TODOUBLE $len / TODOUBLE 100 * 'se1214' STORE
//$se1416 TODOUBLE $len / TODOUBLE 100 * 'se1416' STORE
$se1618 TODOUBLE $len / TODOUBLE 100 * 'se1618' STORE
//$se1820 TODOUBLE $len / TODOUBLE 100 * 'se1820' STORE
$se20+ TODOUBLE $len / TODOUBLE 100 * 'se20+' STORE


$s02 TODOUBLE $len / TODOUBLE 100 * 's02' STORE 
//$s24 TODOUBLE $len / TODOUBLE 100 * 's24' STORE 
$s46 TODOUBLE $len / TODOUBLE 100 * 's46' STORE
//$s68 TODOUBLE $len / TODOUBLE 100 * 's68' STORE
$s810 TODOUBLE $len / TODOUBLE 100 * 's810' STORE
//$s1012 TODOUBLE $len / TODOUBLE 100 * 's1012' STORE
$s1214 TODOUBLE $len / TODOUBLE 100 * 's1214' STORE
//$s1416 TODOUBLE $len / TODOUBLE 100 * 's1416' STORE
$s1618 TODOUBLE $len / TODOUBLE 100 * 's1618' STORE
//$s1820 TODOUBLE $len / TODOUBLE 100 * 's1820' STORE
$s20+ TODOUBLE $len / TODOUBLE 100 * 's20+' STORE


$sw02 TODOUBLE $len / TODOUBLE 100 * 'sw02' STORE 
//$sw24 TODOUBLE $len / TODOUBLE 100 * 'sw24' STORE 
$sw46 TODOUBLE $len / TODOUBLE 100 * 'sw46' STORE
//$sw68 TODOUBLE $len / TODOUBLE 100 * 'sw68' STORE
$sw810 TODOUBLE $len / TODOUBLE 100 * 'sw810' STORE
//$sw1012 TODOUBLE $len / TODOUBLE 100 * 'sw1012' STORE
$sw1214 TODOUBLE $len / TODOUBLE 100 * 'sw1214' STORE
//$sw1416 TODOUBLE $len / TODOUBLE 100 * 'sw1416' STORE
$sw1618 TODOUBLE $len / TODOUBLE 100 * 'sw1618' STORE
//$sw1820 TODOUBLE $len / TODOUBLE 100 * 'sw1820' STORE
$sw20+ TODOUBLE $len / TODOUBLE 100 * 'sw20+' STORE


$w02 TODOUBLE $len / TODOUBLE 100 * 'w02' STORE 
//$w24 TODOUBLE $len / TODOUBLE 100 * 'w24' STORE 
$w46 TODOUBLE $len / TODOUBLE 100 * 'w46' STORE
//$w68 TODOUBLE $len / TODOUBLE 100 * 'w68' STORE
$w810 TODOUBLE $len / TODOUBLE 100 * 'w810' STORE
//$w1012 TODOUBLE $len / TODOUBLE 100 * 'w1012' STORE
$w1214 TODOUBLE $len / TODOUBLE 100 * 'w1214' STORE
//$w1416 TODOUBLE $len / TODOUBLE 100 * 'w1416' STORE
$w1618 TODOUBLE $len / TODOUBLE 100 * 'w1618' STORE
//$w1820 TODOUBLE $len / TODOUBLE 100 * 'w1820' STORE
$w20+ TODOUBLE $len / TODOUBLE 100 * 'w20+' STORE


$nw02 TODOUBLE $len / TODOUBLE 100 * 'nw02' STORE 
//$nw24 TODOUBLE $len / TODOUBLE 100 * 'nw24' STORE 
$nw46 TODOUBLE $len / TODOUBLE 100 * 'nw46' STORE
//$nw68 TODOUBLE $len / TODOUBLE 100 * 'nw68' STORE
$nw810 TODOUBLE $len / TODOUBLE 100 * 'nw810' STORE
//$nw1012 TODOUBLE $len / TODOUBLE 100 * 'nw1012' STORE
$nw1214 TODOUBLE $len / TODOUBLE 100 * 'nw1214' STORE
//$nw1416 TODOUBLE $len / TODOUBLE 100 * 'nw1416' STORE
$nw1618 TODOUBLE $len / TODOUBLE 100 * 'nw1618' STORE
//$nw1820 TODOUBLE $len / TODOUBLE 100 * 'nw1820' STORE
$nw20+ TODOUBLE $len / TODOUBLE 100 * 'nw20+' STORE


[ 'nw02' 'n02' 'ne02' 'e02' 'se02' 's02' 'sw02' 'w02' 'nw46' 'n46' 'ne46' 'e46' 'se46' 's46' 'sw46' 'w46' 'nw810' 'n810' 'ne810' 'e810' 'se810' 's810' 'sw810' 'w810' 'nw1214' 'n1214' 'ne1214' 'e1214' 'se1214' 's1214' 'sw1214' 'w1214' 'nw1618' 'n1618' 'ne1618' 'e1618' 'se1618' 's1618' 'sw1618' 'w1618' 'nw20+' 'n20+' 'ne20+' 'e20+' 'se20+' 's20+' 'sw20+' 'w20+' ] 'formatnames' STORE

[ $nw02 $n02 $ne02 $e02 $se02 $s02 $sw02 $w02 $nw46 $n46 $ne46 $e46 $se46 $s46 $sw46 $w46 $nw810 $n810 $ne810 $e810 $se810 $s810 $sw810 $w810 $nw1214 $n1214 $ne1214 $e1214 $se1214 $s1214 $sw1214 $w1214 $nw1618 $n1618 $ne1618 $e1618 $se1618 $s1618 $sw1618 $w1618 $nw20+ $n20+ $ne20+ $e20+ $se20+ $s20+ $sw20+ $w20+ ] 'formatlist' STORE
0 $formatlist SIZE 1 - <% 'i' STORE
    $formatlist $i GET 'tostring' STORE
    <' 
      %.2f
    '> 
    [ $tostring ] STRINGFORMAT $formatnames $i GET STORE
 %> FOR

[
 [ '0-4 m/s' $n02 $ne02 $e02 $se02 $s02 $sw02  $w02 $nw02  ] 
 // [ '2-4 m/s' $nw24 $nnw24 $n24 $nne24 $ne24 $ene24 $e24 $ese24 $se24 $sse24 $s24 $ssw24 $sw24 $wsw24 $w24 $wnw24 ]
 [ '4-8 m/s' $n46 $ne46 $e46 $se46 $s46 $sw46 $w46 $nw46  ]
 // [ '6-8 m/s' $nw68 $nnw68  $n68 $nne68 $ne68 $ene68 $e68 $ese68 $se68 $sse68 $s68 $ssw68 $sw68 $wsw68 $w68 $wnw68 ]
 [ '8-12 m/s'  $n810 $ne810 $e810 $se810 $s810 $sw810 $w810 $nw810 ]
 // [ '10-12 m/s' $nw1012 $nnw1012 $n1012 $nne1012 $ne1012 $ene1012 $e1012 $ese1012 $se1012 $sse1012 $s1012 $ssw1012 $sw1012 $wsw1012 $w1012 $wnw1012 ]
 [ '12-16 m/s'  $n1214 $ne1214 $e1214 $se1214 $s1214 $sw1214 $w1214 $nw1214 ]
 // [ '14-16 m/s' $nw1416 $nnw1416 $n1416 $nne1416 $ne1416 $ene1416 $e1416 $ese1416 $se1416 $sse1416 $s1416 $ssw1416 $sw1416 $wsw1416 $w1416 $wnw1416 ]
 [ '16-20 m/s'  $n1618 $ne1618 $e1618 $se1618 $s1618 $sw1618 $w1618 $nw1618 ]
 // [ '18-20 m/s' $nw1820 $nnw1820 $n1820 $nne1820 $ne1820 $ene1820 $e1820 $ese1820 $se1820 $sse1820 $s1820 $ssw1820 $sw1820 $wsw1820 $w1820 $wnw1820 ]
 [ '20+ m/s'  $n20+ $ne20+ $e20+ $se20+ $s20+ $sw20+ $w20+ $nw20+ ]
] 'rows' STORE
//[ 'N' 'NNE' 'NE' 'ENE' 'E' 'ESE' 'SE' 'SSE' 'S' 'SSW' 'SW' 'WSW' 'W' 'WNW' 'NW' 'NNW' ] 'columns' STORE
// [ 'NW' 'NNW' 'N' 'NNE' 'NE' 'ENE' 'E' 'ESE' 'SE' 'SSE' 'S' 'SSW' 'SW' 'WSW' 'W' 'WNW' ] 'columns' STORE
[ 'N' 'NE' 'E' 'SE' 'S' 'SW' 'W' 'NW'  ] 'columns' STORE
     {
  'title' 'Wind rose'
  'columns'  $columns
  'rows' $rows 
  } 
'values' STORE 

    { 
      'data' $values // data can also be a gts or a list thereof
      // 'globalParams' { 'bar' { 'stacked' true } }
      'globalParams' { 'bar' { 'stacked' false 'fillGap' false } 'showLegend' T 'showControls' false }
    } 


	  
      %>
	  	        
    }
    
            {
    	'title' 'Active vs Reactive Power'
    	
    'options' { //'autoRefresh' 600
                'eventHandler' 'type=(bounds|zoom|focus|margin|variable),tag=(TurbineId|plant|startDate|endDate)'
				'showRangeSelector' true
        'showLegend' true

				}
    'x' 10 'y' 1 'w' 2 'h' 2
    'type' 'hidden' 

               'macro' <%
	
	
     [ $myreadtoken '~(ACTIVE_POWER|ReaPower)' { 'TurbineId' $TurbineId 'plant' $plant } 
         $startDate TOSTRING 
	$endDate TOSTRING
      ] FETCH { '.app' '' '.uuid' '' 'type' '' } RELABEL 'data' STORE
	  $data { '.app' '' '.uuid' '' } RELABEL 'data' STORE //relabel the atributes
	  [ $data bucketizer.mean 0 10 m 0 ] BUCKETIZE 'data' STORE
        {
  'data' $data 
    'params' [ { 'yAxis' 0 } { 'yAxis' 1 } ] 
  'events' [
        { 'tags' [ 'ZOOM' ] 'type' 'zoom'  } // send zoom event on channel "chart2"
        { 'tags' [ 'FOCUS' ] 'type' 'focus' } // send focus event on channel "chart2"
      ]
   }
      %>

    }
	
	
	{
    'title' 'Active / Expected Power'
    'options' { //'autoRefresh' 600
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'showRangeSelector' true
		'showLegend' true

				}
    'x' 0 'y' 3 'w' 6 'h' 2
    'type' 'line' 'macro' <%
         [ $myreadtoken '~(WIND_SPEED|ACTIVE_POWER).*' { 'plant' $plant 'TurbineId' $TurbineId } 
         //NOW 3 d 
         $startDate TOSTRING  $endDate TOSTRING 
      ] FETCH { '.app' '' '.uuid' '' 'type' '' } RELABEL 'inputs' STORE //get all wind speed for a period
      
     $endDate "lastBucket" STORE
     10 m "bucketSpan" STORE // 1 minute
     $startDate "start" STORE // count = ((end - start) / bucketspan) + 1
     $lastBucket $start - $bucketSpan / TOLONG 1 + "bucketCount" STORE
     [ $inputs bucketizer.mean $lastBucket $bucketSpan $bucketCount ] BUCKETIZE 'bucket' STORE
     //$bucket [ NaN NaN NaN 0 ] FILLVALUE SORT 'bucket' STORE // fill all empty ticks with zero

     $bucket 0 GET 'wind' STORE
     $bucket 1 GET 'pow' STORE

     // get best curve

          { 'token' $myreadtoken 
      'class' '~(WIND_SPEED|ACTIVE_POWER).*' 
      'labels' { 'plant' $plant 'TurbineId' $TurbineId } 
      // 'start' MAXLONG
      'end' NOW
      'timespan' MAXLONG d
      //'sample' 0.5
      'timestep' 10 m
      } FETCH 'x' STORE 

   // [ $myreadtoken '~(WIND_SPEED|ACTIVE_POWER).*' { 'plant' $plant 'TurbineId' $TurbineId } 
   //$startDate TOSTRING 
	 //$endDate TOSTRING
   //   NOW MAXLONG ] FETCH 'x' STORE

       // fill zeros for empty power values and align timeticks
      $x LASTTICK  "xlastBucket" STORE
     10 m "xbucketSpan" STORE // 10 minute
     $x FIRSTTICK "xstart" STORE // count = ((end - start) / bucketspan) + 1
     $xlastBucket $xstart - $xbucketSpan / TOLONG 1 + "xbucketCount" STORE
     [ $x bucketizer.mean $xlastBucket $xbucketSpan $xbucketCount ] BUCKETIZE [ 0.0 0.0 0 0.0 ] FILLVALUE SORT 'x' STORE

           // find both zeros for service time
    [ $x 0.0 mapper.eq 0 0 0 ] MAP 'zeros' STORE
   $zeros 0 GET $zeros 1 GET + TICKLIST 'serviceticks' STORE
    $x 0 GET $serviceticks REMOVETICK 'xwind' STORE 
    $x 1 GET $serviceticks REMOVETICK 'xpower' STORE 
   [ $xwind $xpower ] 'x' STORE

  
     $x NONEMPTY [ SWAP bucketizer.mean 0 10 m 0 ] BUCKETIZE NOW 4 w - 4 w 0 0 ".chunkid" false CHUNK 'chunk' STORE //here we create  1 week chunks of 10 m data

    $chunk 0 GET 'windlist' STORE
    $chunk 1 GET 'powerlist' STORE
    [] 'energy' STORE
    [] 'curves' STORE
   0 $windlist SIZE 1 - <% 'i' STORE
         //create curve of the turbine
  $windlist $i GET 100 * 'bestwind' STORE
  $windlist $i GET LABELS '.chunkid' GET 'name' STORE 
  $powerlist $i GET 'bestpow' STORE

   $bestwind VALUES FLATTEN  // ticks
   [] [] []             // latitudes, longitudes and elevations
   $bestpow VALUES FLATTEN // values
   MAKEGTS
  $name RENAME 3000 2850 TIMECLIP 'bestdata' STORE
  // [ $bestdata bucketizer.mean 0 50 0 ] BUCKETIZE INTERPOLATE SORT 2000 1800 TIMECLIP 'curve' STORE 
  $bestdata DEDUP SORT 55 50 0 1 RLOWESS [ SWAP bucketizer.last 0 50 0 ] BUCKETIZE 3000 2850 TIMECLIP 'curve' STORE // rlowess curve 
  $curves $curve APPEND 'curves' STORE
  $energy [ $curve bucketizer.sum 0 0 1 ] BUCKETIZE APPEND 'energy' STORE 
   %> FOR

   $energy VALUES FLATTEN LSORT -1 GET 'big' STORE
  [ $energy $big mapper.eq 0 0 0 ] MAP NONEMPTY 0 GET NAME 'class' STORE
  [ $curves [] $class filter.byclass ] FILTER 0 GET 'bestcurve' STORE 
   $bestcurve NAME TOLONG ISO8601 'T' SPLIT 0 GET 'time' STORE
   $bestcurve $time RENAME 'bestcurve' STORE
   [ $bestcurve bucketizer.mean 0 1 0 ] BUCKETIZE INTERPOLATE SORT 'bestcurve' STORE

  //calculate expected power with theoretical curve 
    $wind 100 * 'wind' STORE 

  [] 'values' STORE
  $wind SIZE 1 - 'len' STORE
  0 $len <% 'i' STORE
   $bestcurve $wind VALUES $i GET ATTICK 0 GET -1 GET 'value' STORE
   <% $value NULL == %> <% 0 'value' STORE %> 
   <% $value 'value' STORE %> 1 SWITCH
   $values [ $value ] APPEND 'values' STORE
   %> FOR

  $wind TICKLIST
  [] [] []
  $values
  MAKEGTS 'Expected' RENAME 'expected' STORE 
    
      $expected 100 * RINT 100 / [ 0.0 0.0 0 0 ] FILLVALUE SORT
      $pow 100 * RINT 100 / [ 0.0 0.0 0 0 ] FILLVALUE SORT
      %>
    }
	
	{  
    'title' 'Capacity Factor'   
    'options' { //'autoRefresh' 10
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'maxValue' 100
				}
    'x' 6 'y' 3 'w' 2 'h' 2 
    'type' 'gauge' 	
    'macro' <%
 //fetch active power for filtering operation
         // turbine this year
     { 'token' $myreadtoken 
      'class' 'ACTIVE_POWER' 
      'labels' { 'plant' $plant 'TurbineId' $TurbineId } 
      'start' $startDate
      'end' $endDate
      //'sample' 0.5
      'timestep' 10 m
      } FETCH 'data' STORE
	   $data { '.app' '' '.uuid' '' 'type' '' } RELABEL 'MWh' RENAME 'data' STORE //relabel the atributes
     [ $data bucketizer.last 0 10 m 0 ] BUCKETIZE 'etrenddata' STORE // sum of each turbine seperately and aligned

     [ $etrenddata [] { 'manufacturer' 'Sinovel' } filter.bylabels ] FILTER SIZE 'sksn' STORE  // find number of turbines of that month
     [ $etrenddata [] { 'manufacturer' 'Vestas' } filter.bylabels ] FILTER SIZE 'skvs' STORE
     [ $etrenddata [] { 'manufacturer' 'Goldwind' } filter.bylabels ] FILTER SIZE 'skgw' STORE 

     [ $etrenddata [] reducer.sum ] REDUCE [ SWAP bucketizer.sum 0 0 1 ] BUCKETIZE 'etrenddata' STORE  
      $etrenddata VALUES 0 GET 0 GET TODOUBLE 1000 / 6 / 'total' STORE  //change to Mwh
     
     // calculate capacity of the turbine 
     1500 $sksn * 1000 /
     3450 $skvs * 1000 / + 
     6000 $skgw * 1000 / + 'capacity_max_sk_new' STORE
     // $totActPow $capacity_max / TODOUBLE 100 * 'cf' STORE //old calculation for last 10 mins
     //$xlastBucket $xstart - $xbucketSpan /
     $endDate $startDate - 1 h / 'total_hours' STORE
       <% $etrenddata [] == %> <% 0 'turbine_this_year' STORE %>
    <% 
     $total $capacity_max_sk_new $total_hours * / TODOUBLE 100 * 100 * RINT 100 / 'turbine_this_year' STORE 
    %> IFTE // if there is no data this year
     { 
     'data' $turbine_this_year 

    }
    %>
    }
	
		{
    'title' 'Speed / Direction / Torque'
    'options' { //'autoRefresh' 10
                'eventHandler' 'type=(variable|zoom|focus),tag=(TurbineId|plant|startDate|endDate)'
		'showRangeSelector' true
		'showLegend' true

				}
    'x' 10 'y' 3 'w' 2 'h' 2
    'type' 'hidden' 'macro' <%

     [ $myreadtoken '~(WIND_DIRECTION|WIND_SPEED|HubTor001).*' { 'TurbineId' $TurbineId 'plant' $plant } 
         $startDate TOSTRING 
	$endDate TOSTRING
      ] FETCH 'data' STORE
	  $data { '.app' '' '.uuid' '' 'type' '' } RELABEL 'nacelle_data' STORE //relabel the atributes
	  [ $nacelle_data bucketizer.mean 0 10 m 0 ] BUCKETIZE 'nacelle_data' STORE 
	  	  
	  {
	  'data' $nacelle_data 'params' [ { 'yAxis' 0 } { 'yAxis' 1 } { 'yAxis' 2 }  ]

	  }
	
      %>
	  
    }
	
	{
    'title' 'Wind Speed / Power'
    'options' { // 'autoRefresh' 10
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'showRangeSelector' true
		'showLegend' true

				}
    'x' 0 'y' 5 'w' 4 'h' 2
    'type' 'line' 'macro' <%
     [ $myreadtoken '~(WIND_SPEED|ACTIVE_POWER).*' { 'TurbineId' $TurbineId 'plant' $plant } 
         $startDate TOSTRING 
	 $endDate TOSTRING
      ] FETCH { '.app' '' '.uuid' '' 'type' '' } RELABEL 'data' STORE
      
      [ $data bucketizer.mean 0 10 m 0 ] BUCKETIZE [ 0.0 0.0 0 0 ] FILLVALUE SORT  <% 100 * RINT 100 / %> FOREACH STACKTOLIST 'data' STORE
	  {
	  'data' $data  'params' [ { 'yAxis' 0 } { 'yAxis' 1 } ]
	  $data { '.app' '' '.uuid' '' } RELABEL 'data' STORE //relabel the atributes
	  }
      %>
    }
	
  {
    'title' 'Status'   
    'options' { //'autoRefresh' 10
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)'
		'unit' 'rpm'
		'maxValue' 2000 }
    'x' 4 'y' 5 'w' 4 'h' 2 
    'type' 'profile' 	
    'macro' <%    
   //fetch the most recent point of every GTS this token can access
    [ $myreadtoken 'PLC_STATUS' { 'TurbineId' $TurbineId 'plant' $plant } 
         $startDate TOSTRING 
	$endDate TOSTRING
      ] FETCH 'data' STORE
	$data { '.app' '' '.uuid' '' } RELABEL 'data' STORE //relabel the atributes
  $endDate 'lastbucket' STORE
      [ $data bucketizer.last $lastbucket 5 s 0 ] BUCKETIZE FILLPREVIOUS FILLNEXT SORT 'bucket' STORE
      $data 0 GET LABELS 'manufacturer' GET 'manu' STORE

    <% $manu 'Goldwind' == %> <% 
   [ $bucket 0 mapper.eq 0 0 0 ] MAP 'Initialization' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'initial' STORE
   [ $bucket 1 mapper.eq 0 0 0 ] MAP 'Stop' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'stop' STORE
   [ $bucket 2 mapper.eq 0 0 0 ] MAP 'Standstill' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'standstill' STORE
   [ $bucket 3 mapper.eq 0 0 0 ] MAP 'Starting' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'start' STORE
   [ $bucket 4 mapper.eq 0 0 0 ] MAP 'Run Up' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'run' STORE
   [ $bucket 5 mapper.eq 0 0 0 ] MAP 'Power Production' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m 1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'power' STORE
   [ $bucket 6 mapper.eq 0 0 0 ] MAP 'Service' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'service' STORE
   [ $bucket 7 mapper.eq 0 0 0 ] MAP 'Fault' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'fault' STORE

  [ $initial $stop $standstill $start $run $power $service $fault ] 'gtslist' STORE
   $gtslist SIZE 1 - 'gtslen' STORE
   [] 'newlist' STORE

   0 $gtslen <% 'i' STORE $gtslist $i GET 'status' STORE $status NONEMPTY SIZE 1 - 'statuslen' STORE  
    
    NEWGTS $status 0 GET NAME RENAME 'g' STORE
     <% $statuslen 0 >= %> <%
       0 $statuslen <% 'j' STORE $status $j GET TICKLIST 'ticks' STORE
           <% $ticks SIZE 1 > %> <% $ticks 1 GET $ticks 0 GET - 'duration' STORE %>
           <% 'PT2M' DURATION 'duration' STORE %> 1 SWITCH
           $g $ticks 0 GET NaN NaN NaN $duration ADDVALUE DROP
                    %> FOR
                     %> 
      <%  $g $status 0 GET FIRSTTICK NaN NaN NaN 0 ADDVALUE DROP %> 1 SWITCH

   // $newlist [ $g ]  APPEND 'newlist' STORE
   $g
   %> FOR 

    %>
    <% $manu 'Sinovel' == %>
    <%
     
   [ $bucket -1 mapper.eq 0 0 0 ] MAP 'Offline' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'offline' STORE
   [ $bucket 0 mapper.eq 0 0 0 ] MAP 'Start' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'start' STORE
   [ $bucket 1 mapper.eq 0 0 0 ] MAP 'Standby' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'standby' STORE
   [ $bucket 2 mapper.eq 0 0 0 ] MAP 'Production' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'production' STORE
   [ $bucket 3 mapper.eq 0 0 0 ] MAP 'Error' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'error' STORE
   [ $bucket 4 mapper.eq 0 0 0 ] MAP 'Service' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'service' STORE
   [ $bucket 5 mapper.eq 0 0 0 ] MAP 'Low Temp.' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'lowtemp' STORE
   [ $bucket 6 mapper.eq 0 0 0 ] MAP 'High Wind' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'highwind' STORE

   [ $offline $start $standby $production $error $service $lowtemp $highwind ] 'gtslist' STORE
   $gtslist SIZE 1 - 'gtslen' STORE
   [] 'newlist' STORE


   0 $gtslen <% 'i' STORE $gtslist $i GET 'status' STORE $status NONEMPTY SIZE 1 - 'statuslen' STORE  
    
    NEWGTS $status 0 GET NAME RENAME 'g' STORE
     <% $statuslen 0 >= %> <%
       0 $statuslen <% 'j' STORE $status $j GET TICKLIST 'ticks' STORE
           <% $ticks SIZE 1 > %> <% $ticks 1 GET $ticks 0 GET - 'duration' STORE %>
           <% 'PT2M' DURATION 'duration' STORE %> 1 SWITCH
           $g $ticks 0 GET NaN NaN NaN $duration ADDVALUE DROP
                    %> FOR
                    
                           %> 
        <%  $g $status 0 GET FIRSTTICK NaN NaN NaN 0 ADDVALUE DROP %> 1 SWITCH
 
    //$newlist [ $g ] APPEND
  $g
   %> FOR
    %> 
    <% $manu 'Vestas' == %> 
    <% 
   [ $bucket 3 mapper.eq 0 0 0 ] MAP 'Run' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'run' STORE
   [ $bucket 2 mapper.eq 0 0 0 ] MAP 'Pause' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'pause' STORE
   [ $bucket 1 mapper.eq 0 0 0 ] MAP 'Stop' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'stop' STORE
   [ $bucket 4 mapper.eq 0 0 0 ] MAP 'Emergency' RENAME { 'TurbineId' '' 'type' '' 'plant' '' } RELABEL 2 m  1 'split' TIMESPLIT FLATTEN RANGECOMPACT 'emergency' STORE

   [ $run $pause $stop $emergency ] 'gtslist' STORE
   $gtslist SIZE 1 - 'gtslen' STORE
   [] 'newlist' STORE


   0 $gtslen <% 'i' STORE $gtslist $i GET 'status' STORE $status NONEMPTY SIZE 1 - 'statuslen' STORE  
    
    NEWGTS $status 0 GET NAME RENAME 'g' STORE
     <% $statuslen 0 >= %> <%
       0 $statuslen <% 'j' STORE $status $j GET TICKLIST 'ticks' STORE
           <% $ticks SIZE 1 > %> <% $ticks 1 GET $ticks 0 GET - 'duration' STORE %>
           <% 'PT2M' DURATION 'duration' STORE %> 1 SWITCH
           $g $ticks 0 GET NaN NaN NaN $duration ADDVALUE DROP
                    %> FOR
                    
                           %> 
        <%  $g $status 0 GET FIRSTTICK NaN NaN NaN 0 ADDVALUE DROP %> 1 SWITCH
 
    //$newlist [ $g ] APPEND
  $g
   %> FOR


    %> <% %> 3 SWITCH

    %>
    }
					
					{
    'title' 'Power Curve'
    'options' { 
                'eventHandler' 'type=variable,tag=(TurbineId|plant|startDate|endDate)' //TurbineId,plant,startDate,endDate,VariableId
                'showLegend' true
                     
				}
    'x' 8 'y' 5 'w' 4 'h' 2
    'type' 'scatter' 
    'macro' <%


      [ $myreadtoken '~(ACTIVE_POWER|WIND_SPEED).*' { 'plant' $plant 'TurbineId' $TurbineId } 
          $startDate TOSTRING  $endDate TOSTRING
      ] FETCH 'inputs' STORE //get all wind speed for a period
      
     $inputs LASTTICK  "lastBucket" STORE
     10 m "bucketSpan" STORE // 10 minute
     $inputs FIRSTTICK "start" STORE // count = ((end - start) / bucketspan) + 1
     $lastBucket $start - $bucketSpan / TOLONG 1 + "bucketCount" STORE
     [ $inputs bucketizer.mean $lastBucket $bucketSpan $bucketCount ] BUCKETIZE FILLPREVIOUS FILLNEXT 'bucket' STORE
     //$bucket [ NaN NaN NaN 0 ] FILLVALUE SORT 'bucket' STORE // fill all empty ticks with zero

     $bucket 0 GET 'wind' STORE
     $bucket 1 GET 'pow' STORE
		
		$wind 100 * 'wind' STORE
		[ $pow bucketizer.mean 0 1 m 0 ] BUCKETIZE 'pow' STORE
    [ $wind bucketizer.mean 0 1 m 0 ] BUCKETIZE 'wind' STORE
		
		$wind VALUES FLATTEN // ticks
		[] [] []             // latitudes, longitudes and elevations
		$pow VALUES FLATTEN // values
		MAKEGTS
		'Current' RENAME  100 * RINT 100 / 'data_merge' STORE
		[ $data_merge bucketizer.mean 0 50 0 ] BUCKETIZE 'mean_spline' STORE  //arithmetic mean curve
    //$data_merge DEDUP SORT 55 50 0 1 RLOWESS [ SWAP bucketizer.last 0 50 0 ] BUCKETIZE 'rlowess' RENAME 'rcurve' STORE // rlowess curve
		

	  //$plant 'plant' STORE
	  
	  <% $plant "Soke" == %> <% [ 0 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 
1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 2450 2500 ]  // ticks
[] [] []             // latitudes longitudes and elevations
[  0.0 7.0 53.0 123.0 208.0 309.0 427.0 567.0
                           732.0 927.0 1149.0 1401.0 1688.0 2006.0 2348.0 2693.0 
                           3011.0 3252.0 3388.0 3436.0 3448.0 3450.0 3450.0 
                           3450.0 3450.0 3450.0 3450.0 3450.0 3450.0 3450.0 
                           3450.0 3450.0 3450.0 3450.0 3450.0 3450.0  3450.0
                            3450.0 3450.0 3450.0 3450.0 3450.0 3450.0 3450.0
                            3450.0 3450.0 ] // values
MAKEGTS %>
	  <% [ 0 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 1200 1250 1300 1350 1400 1450 
               1500 1550 1600 1650 1700 1750 1800 1850 1900 1950 2000 2050 2100 2150 2200 2250 2300 2350 2400 2450 2500 ]  // ticks
               [] [] []             // latitudes longitudes and elevations
               [ 0.0 4.0498878 23.628781 58.493583 112.55065 179.99284 253.35229 354.7410
                           458.4080 574.8670 716.3690 865.4690 1049.0700 1249.6800 1368.4700 1437.6800 
                           1475.1500 1493.6000 1500.0 1500.0 1500.0 1500.0 1500.0 
                           1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 
                           1500.0 1500.0 1500.0 1500.0 1500.0 1500.0  1500.0
                            1500.0 1500.0 1500.0 1500.0 1500.0 1500.0 1500.0
                            1500.0 1500.0 ] // values
              MAKEGTS %>	  
	  1 SWITCH 'Vendor' RENAME 'turbine_type' STORE

    // get best curve of the selected turbine
        { 'token' $myreadtoken 
      'class' '~(WIND_SPEED|ACTIVE_POWER).*' 
      'labels' { 'plant' $plant 'TurbineId' $TurbineId } 
      // 'start' MAXLONG
      'end' NOW
      'timespan' MAXLONG d
      //'sample' 0.5
      'timestep' 10 m
      } FETCH 'x' STORE 

   // [ $myreadtoken '~(WIND_SPEED|ACTIVE_POWER).*' { 'plant' $plant 'TurbineId' $TurbineId } 
   //$startDate TOSTRING 
	 //$endDate TOSTRING
   //  NOW MAXLONG ] FETCH 'x' STORE

        // fill zeros for empty power values and align timeticks
      $x LASTTICK  "xlastBucket" STORE
     10 m "xbucketSpan" STORE // 10 minute
     $x FIRSTTICK "xstart" STORE // count = ((end - start) / bucketspan) + 1
     $xlastBucket $xstart - $xbucketSpan / TOLONG 1 + "xbucketCount" STORE
     [ $x bucketizer.mean $xlastBucket $xbucketSpan $xbucketCount ] BUCKETIZE [ 0.0 0.0 0 0.0 ] FILLVALUE SORT 'x' STORE

           // find both zeros for service time
    [ $x 0.0 mapper.eq 0 0 0 ] MAP 'zeros' STORE
   $zeros 0 GET $zeros 1 GET + TICKLIST 'serviceticks' STORE
    $x 0 GET $serviceticks REMOVETICK 'wind' STORE 
    $x 1 GET $serviceticks REMOVETICK 'power' STORE 
   [ $wind $power ] 'x' STORE

      
     $x NONEMPTY [ SWAP bucketizer.mean 0 10 m 0 ] BUCKETIZE  NOW 4 w - 4 w 0 0 ".chunkid" false CHUNK 'chunk' STORE //here we create  1 week chunks of 10 m data

    $chunk 0 GET 'windlist' STORE
    $chunk 1 GET 'powerlist' STORE
    [] 'energy' STORE
    [] 'curves' STORE
   0 $windlist SIZE 1 - <% 'i' STORE
         //create curve of the turbine
  $windlist $i GET 100 * 'bestwind' STORE
  $windlist $i GET LABELS '.chunkid' GET 'name' STORE 
  $powerlist $i GET 'bestpow' STORE

   $bestwind VALUES FLATTEN  // ticks
   [] [] []             // latitudes, longitudes and elevations
   $bestpow VALUES FLATTEN // values
   MAKEGTS
  $name RENAME 3000 2850 TIMECLIP 'bestdata' STORE
  //[ $bestdata bucketizer.mean 0 50 0 ] BUCKETIZE INTERPOLATE SORT 3000 2850 TIMECLIP 'curve' STORE // arithmetic mean curve
   $bestdata DEDUP SORT 55 50 0 1 RLOWESS [ SWAP bucketizer.last 0 50 0 ] BUCKETIZE 3000 2850 TIMECLIP 'curve' STORE // rlowess curve 
  $curves $curve APPEND 'curves' STORE
  $energy [ $curve bucketizer.sum 0 0 1 ] BUCKETIZE APPEND 'energy' STORE 
   %> FOR

   $energy VALUES FLATTEN LSORT -1 GET 'big' STORE
  [ $energy $big mapper.eq 0 0 0 ] MAP NONEMPTY 0 GET NAME 'class' STORE
  [ $curves [] $class filter.byclass ] FILTER 0 GET 'bestcurve' STORE 
   $bestcurve NAME TOLONG ISO8601 'T' SPLIT 0 GET 'time' STORE
   $bestcurve $time RENAME 100 * RINT 100 / 'bestcurve' STORE

	 
	 { 'data' [ $data_merge $mean_spline $bestcurve ] 'params' [ { 'type' 'scatter' } { 'type' 'spline' } { 'type' 'spline' } ]  'globalParams' {  'timeMode' 'timestamp' 'showControls' true } 
    //'events' [ { 'type' 'variable' 'tags' [ 'bestcurve' ] 'value' $bestcurve }  ] // Event definition  
   } 
	
      %>
	  
	  
    }
			
	
	
  ]


}

